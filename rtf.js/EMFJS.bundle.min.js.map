{"version":3,"file":"EMFJS.bundle.min.js","mappings":"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","sources":["webpack://rtfjs/webpack/universalModuleDefinition","webpack://rtfjs/webpack/bootstrap","webpack://rtfjs/webpack/runtime/define property getters","webpack://rtfjs/webpack/runtime/hasOwnProperty shorthand","webpack://rtfjs/webpack/runtime/make namespace object","webpack://rtfjs/./src/util/SVG.ts","webpack://rtfjs/./src/emfjs/Helper.ts","webpack://rtfjs/./src/emfjs/Blob.ts","webpack://rtfjs/./src/emfjs/Primitives.ts","webpack://rtfjs/./src/emfjs/Region.ts","webpack://rtfjs/./src/emfjs/Bitmap.ts","webpack://rtfjs/./src/emfjs/Style.ts","webpack://rtfjs/./src/emfjs/EMFRecords.ts","webpack://rtfjs/./src/emfjs/GDIContext.ts","webpack://rtfjs/./src/emfjs/Renderer.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"EMFJS\"] = factory();\n\telse\n\t\troot[\"EMFJS\"] = factory();\n})(this, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/*\n\nThe MIT License (MIT)\n\nCopyright (c) 2020 Ynse Hoornenborg\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n*/\n\nexport class SVGFilters {\n\n    public flood(filter: SVGFilterElement, resultId: string, color: string, opacity: number, _settings?: any): void {\n        const floodElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"feFlood\");\n        if (resultId) {\n            floodElement.setAttribute(\"id\", resultId);\n        }\n        floodElement.setAttribute(\"flood-color\", color);\n        floodElement.setAttribute(\"flood-opacity\", opacity.toString());\n        filter.appendChild(floodElement);\n    }\n\n    public composite(filter: SVGFilterElement,\n                     resultId: string,\n                     in1: string,\n                     in2: string,\n                     k1?: number,\n                     k2?: number,\n                     k3?: number,\n                     k4?: number,\n                     _settings?: any): void {\n        const compositeElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"feComposite\");\n        if (resultId) {\n            compositeElement.setAttribute(\"id\", resultId);\n        }\n        compositeElement.setAttribute(\"in\", in1);\n        compositeElement.setAttribute(\"in2\", in2);\n        filter.appendChild(compositeElement);\n    }\n}\n\nexport class SVGPathBuilder {\n    private _path = \"\";\n\n    public move(x: number, y: number): void {\n        this._path += ` M ${x} ${y}`;\n    }\n\n    public path(): string {\n        return this._path.substr(1);\n    }\n\n    public line(pts: number[][]): void {\n        pts.forEach((point) => {\n            this._path += ` L ${point[0]} ${point[1]}`;\n        });\n    }\n\n    public curveC(x1: number, y1: number, x2: number, y2: number, x: number, y: number): void {\n        this._path += ` C ${x1} ${y1}, ${x2} ${y2}, ${x} ${y}`;\n    }\n\n    public close(): void {\n        this._path += ` Z`;\n    }\n}\n\nexport class SVG {\n    public filters = new SVGFilters();\n    private _svg: SVGElement;\n    private _defs: SVGDefsElement | undefined = undefined;\n\n    constructor(svg: SVGElement) {\n        this._svg = svg;\n    }\n\n    public svg(parent: Element,\n               x: number,\n               y: number,\n               width: number,\n               height: number,\n               settings?: any): SVGElement {\n        const svgElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n        svgElement.setAttribute(\"x\", x.toString());\n        svgElement.setAttribute(\"y\", y.toString());\n        svgElement.setAttribute(\"width\", width.toString());\n        svgElement.setAttribute(\"height\", height.toString());\n        this._appendSettings(settings, svgElement);\n\n        if (parent != null) {\n            parent.appendChild(svgElement);\n        } else {\n            this._svg.appendChild(svgElement);\n        }\n\n        return svgElement;\n    }\n\n    public image(parent: Element,\n                 x: number,\n                 y: number,\n                 width: number,\n                 height: number,\n                 url: string,\n                 settings?: any): SVGImageElement {\n        const imageElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"image\");\n        imageElement.setAttribute(\"x\", x.toString());\n        imageElement.setAttribute(\"y\", y.toString());\n        imageElement.setAttribute(\"width\", width.toString());\n        imageElement.setAttribute(\"height\", height.toString());\n        imageElement.setAttributeNS(\"http://www.w3.org/1999/xlink\", \"href\", url);\n        this._appendSettings(settings, imageElement);\n        parent.appendChild(imageElement);\n        return imageElement;\n    }\n\n    public rect(parent: Element,\n                x: number,\n                y: number,\n                width: number,\n                height: number,\n                rx?: number,\n                ry?: number,\n                settings?: any): SVGRectElement;\n    public rect(parent: Element, x: number, y: number, width: number, height: number, settings?: any): SVGRectElement;\n    public rect(parent: Element,\n                x: number,\n                y: number,\n                width: number,\n                height: number,\n                rx?: number | any,\n                ry?: number,\n                settings?: any): SVGRectElement {\n        const rectElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\");\n        rectElement.setAttribute(\"x\", x.toString());\n        rectElement.setAttribute(\"y\", y.toString());\n        rectElement.setAttribute(\"width\", width.toString());\n        rectElement.setAttribute(\"height\", height.toString());\n        if (rx !== undefined) {\n            if (rx instanceof Number) {\n                rectElement.setAttribute(\"rx\", rx.toString());\n            } else if (rx instanceof Object) {\n                this._appendSettings(rx, rectElement);\n            }\n        }\n        if (ry !== undefined) {\n            rectElement.setAttribute(\"ry\", ry.toString());\n        }\n        this._appendSettings(settings, rectElement);\n        parent.appendChild(rectElement);\n        return rectElement;\n    }\n\n    public line(parent: Element, x1: number, y1: number, x2: number, y2: number, settings?: any): SVGLineElement {\n        const lineElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"line\");\n        lineElement.setAttribute(\"x1\", x1.toString());\n        lineElement.setAttribute(\"y1\", y1.toString());\n        lineElement.setAttribute(\"x2\", x2.toString());\n        lineElement.setAttribute(\"y2\", y2.toString());\n        this._appendSettings(settings, lineElement);\n        parent.appendChild(lineElement);\n        return lineElement;\n    }\n\n    public polygon(parent: Element, points: number[][], settings?: any): SVGPolygonElement {\n        const polygonElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"polygon\");\n        polygonElement.setAttribute(\"points\", points.map((point) => point.join(\",\")).join(\" \"));\n        this._appendSettings(settings, polygonElement);\n        parent.appendChild(polygonElement);\n        return polygonElement;\n    }\n\n    public polyline(parent: Element, points: number[][], settings?: any): SVGPolylineElement {\n        const polylineElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"polyline\");\n        polylineElement.setAttribute(\"points\", points.map((point) => point.join(\",\")).join(\" \"));\n        this._appendSettings(settings, polylineElement);\n        parent.appendChild(polylineElement);\n        return polylineElement;\n    }\n\n    public ellipse(parent: Element, cx: number, cy: number, rx: number, ry: number, settings?: any): SVGEllipseElement {\n        const ellipseElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"ellipse\");\n        ellipseElement.setAttribute(\"cx\", cx.toString());\n        ellipseElement.setAttribute(\"cy\", cy.toString());\n        ellipseElement.setAttribute(\"rx\", rx.toString());\n        ellipseElement.setAttribute(\"ry\", ry.toString());\n        this._appendSettings(settings, ellipseElement);\n        parent.appendChild(ellipseElement);\n        return ellipseElement;\n    }\n\n    public path(parent: SVGElement, builder: SVGPathBuilder, settings?: any): SVGPathElement {\n        const pathElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n        pathElement.setAttribute(\"d\", builder.path());\n        this._appendSettings(settings, pathElement);\n        parent.appendChild(pathElement);\n        return pathElement;\n    }\n\n    public text(parent: Element, x: number, y: number, value: string, settings?: any): SVGTextElement {\n        const textElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"text\");\n        textElement.setAttribute(\"x\", x.toString());\n        textElement.setAttribute(\"y\", y.toString());\n        this._appendSettings(settings, textElement);\n        const textNode = document.createTextNode(value);\n        textElement.appendChild(textNode);\n        parent.appendChild(textElement);\n        return textElement;\n    }\n\n    public filter(parent: Element,\n                  id: string,\n                  x: number,\n                  y: number,\n                  width: number,\n                  height: number,\n                  settings?: any): SVGFilterElement {\n        const filterElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"filter\");\n        filterElement.setAttribute(\"x\", x.toString());\n        filterElement.setAttribute(\"y\", y.toString());\n        filterElement.setAttribute(\"width\", width.toString());\n        filterElement.setAttribute(\"height\", height.toString());\n        this._appendSettings(settings, filterElement);\n        parent.appendChild(filterElement);\n        return filterElement;\n    }\n\n    public pattern(parent: Element,\n                   resultId: string,\n                   x: number,\n                   y: number,\n                   width: number,\n                   height: number,\n                   settings?: any): SVGPatternElement {\n        const patternElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"pattern\");\n        if (resultId) {\n            patternElement.setAttribute(\"id\", resultId);\n        }\n        patternElement.setAttribute(\"x\", x.toString());\n        patternElement.setAttribute(\"y\", y.toString());\n        patternElement.setAttribute(\"width\", width.toString());\n        patternElement.setAttribute(\"height\", height.toString());\n        this._appendSettings(settings, patternElement);\n        parent.appendChild(patternElement);\n        return patternElement;\n    }\n\n    public defs(): SVGDefsElement {\n        if (this._defs === undefined) {\n            const defsElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"defs\");\n            this._svg.appendChild(defsElement);\n            this._defs = defsElement;\n        }\n        return this._defs;\n    }\n\n    public clipPath(parent: Element, resultId: string, units?: string, settings?: any): SVGClipPathElement {\n        const clipElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"clipPath\");\n        if (resultId) {\n            clipElement.setAttribute(\"id\", resultId);\n        }\n        if (units === undefined) {\n            units = \"userSpaceOnUse\";\n        }\n        clipElement.setAttribute(\"clipPathUnits\", units);\n        this._appendSettings(settings, clipElement);\n        parent.appendChild(clipElement);\n        return clipElement;\n    }\n\n    public createPath(): SVGPathBuilder {\n        return new SVGPathBuilder();\n    }\n\n    private _appendSettings(settings: any | undefined, element: Element): void {\n        if (settings !== undefined) {\n            Object.keys(settings).forEach((key) => {\n                element.setAttribute(key, settings[key]);\n            });\n        }\n    }\n\n}\n","/*\n\nThe MIT License (MIT)\n\nCopyright (c) 2016 Tom Zoehner\nCopyright (c) 2018 Thomas Bluemel\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n*/\n\nexport class EMFJSError extends Error {\n    constructor(message: string) {\n        super(message); // 'Error' breaks prototype chain here\n        Object.setPrototypeOf(this, new.target.prototype); // restore prototype chain\n    }\n}\n\nlet isLoggingEnabled = true;\n\nexport function loggingEnabled(enabled: boolean): void {\n    isLoggingEnabled = enabled;\n}\n\nexport class Helper {\n    public static GDI = {\n        FormatSignature: {\n            ENHMETA_SIGNATURE: 0x464D4520,\n            EPS_SIGNATURE: 0x46535045,\n        },\n        BITMAPINFOHEADER_SIZE: 40,\n        BITMAPCOREHEADER_SIZE: 12,\n        RecordType: {\n            EMR_POLYBEZIER: 0x00000002,\n            EMR_POLYGON: 0x00000003,\n            EMR_POLYLINE: 0x00000004,\n            EMR_POLYBEZIERTO: 0x00000005,\n            EMR_POLYLINETO: 0x00000006,\n            EMR_POLYPOLYLINE: 0x00000007,\n            EMR_POLYPOLYGON: 0x00000008,\n            EMR_SETWINDOWEXTEX: 0x00000009,\n            EMR_SETWINDOWORGEX: 0x0000000A,\n            EMR_SETVIEWPORTEXTEX: 0x0000000B,\n            EMR_SETVIEWPORTORGEX: 0x0000000C,\n            EMR_SETBRUSHORGEX: 0x0000000D,\n            EMR_EOF: 0x0000000E,\n            EMR_SETPIXELV: 0x0000000F,\n            EMR_SETMAPPERFLAGS: 0x00000010,\n            EMR_SETMAPMODE: 0x00000011,\n            EMR_SETBKMODE: 0x00000012,\n            EMR_SETPOLYFILLMODE: 0x00000013,\n            EMR_SETROP2: 0x00000014,\n            EMR_SETSTRETCHBLTMODE: 0x00000015,\n            EMR_SETTEXTALIGN: 0x00000016,\n            EMR_SETCOLORADJUSTMENT: 0x00000017,\n            EMR_SETTEXTCOLOR: 0x00000018,\n            EMR_SETBKCOLOR: 0x00000019,\n            EMR_OFFSETCLIPRGN: 0x0000001A,\n            EMR_MOVETOEX: 0x0000001B,\n            EMR_SETMETARGN: 0x0000001C,\n            EMR_EXCLUDECLIPRECT: 0x0000001D,\n            EMR_INTERSECTCLIPRECT: 0x0000001E,\n            EMR_SCALEVIEWPORTEXTEX: 0x0000001F,\n            EMR_SCALEWINDOWEXTEX: 0x00000020,\n            EMR_SAVEDC: 0x00000021,\n            EMR_RESTOREDC: 0x00000022,\n            EMR_SETWORLDTRANSFORM: 0x00000023,\n            EMR_MODIFYWORLDTRANSFORM: 0x00000024,\n            EMR_SELECTOBJECT: 0x00000025,\n            EMR_CREATEPEN: 0x00000026,\n            EMR_CREATEBRUSHINDIRECT: 0x00000027,\n            EMR_DELETEOBJECT: 0x00000028,\n            EMR_ANGLEARC: 0x00000029,\n            EMR_ELLIPSE: 0x0000002A,\n            EMR_RECTANGLE: 0x0000002B,\n            EMR_ROUNDRECT: 0x0000002C,\n            EMR_ARC: 0x0000002D,\n            EMR_CHORD: 0x0000002E,\n            EMR_PIE: 0x0000002F,\n            EMR_SELECTPALETTE: 0x00000030,\n            EMR_CREATEPALETTE: 0x00000031,\n            EMR_SETPALETTEENTRIES: 0x00000032,\n            EMR_RESIZEPALETTE: 0x00000033,\n            EMR_REALIZEPALETTE: 0x00000034,\n            EMR_EXTFLOODFILL: 0x00000035,\n            EMR_LINETO: 0x00000036,\n            EMR_ARCTO: 0x00000037,\n            EMR_POLYDRAW: 0x00000038,\n            EMR_SETARCDIRECTION: 0x00000039,\n            EMR_SETMITERLIMIT: 0x0000003A,\n            EMR_BEGINPATH: 0x0000003B,\n            EMR_ENDPATH: 0x0000003C,\n            EMR_CLOSEFIGURE: 0x0000003D,\n            EMR_FILLPATH: 0x0000003E,\n            EMR_STROKEANDFILLPATH: 0x0000003F,\n            EMR_STROKEPATH: 0x00000040,\n            EMR_FLATTENPATH: 0x00000041,\n            EMR_WIDENPATH: 0x00000042,\n            EMR_SELECTCLIPPATH: 0x00000043,\n            EMR_ABORTPATH: 0x00000044,\n            EMR_COMMENT: 0x00000046,\n            EMR_FILLRGN: 0x00000047,\n            EMR_FRAMERGN: 0x00000048,\n            EMR_INVERTRGN: 0x00000049,\n            EMR_PAINTRGN: 0x0000004A,\n            EMR_EXTSELECTCLIPRGN: 0x0000004B,\n            EMR_BITBLT: 0x0000004C,\n            EMR_STRETCHBLT: 0x0000004D,\n            EMR_MASKBLT: 0x0000004E,\n            EMR_PLGBLT: 0x0000004F,\n            EMR_SETDIBITSTODEVICE: 0x00000050,\n            EMR_STRETCHDIBITS: 0x00000051,\n            EMR_EXTCREATEFONTINDIRECTW: 0x00000052,\n            EMR_EXTTEXTOUTA: 0x00000053,\n            EMR_EXTTEXTOUTW: 0x00000054,\n            EMR_POLYBEZIER16: 0x00000055,\n            EMR_POLYGON16: 0x00000056,\n            EMR_POLYLINE16: 0x00000057,\n            EMR_POLYBEZIERTO16: 0x00000058,\n            EMR_POLYLINETO16: 0x00000059,\n            EMR_POLYPOLYLINE16: 0x0000005A,\n            EMR_POLYPOLYGON16: 0x0000005B,\n            EMR_POLYDRAW16: 0x0000005C,\n            EMR_CREATEMONOBRUSH: 0x0000005D,\n            EMR_CREATEDIBPATTERNBRUSHPT: 0x0000005E,\n            EMR_EXTCREATEPEN: 0x0000005F,\n            EMR_POLYTEXTOUTA: 0x00000060,\n            EMR_POLYTEXTOUTW: 0x00000061,\n            EMR_SETICMMODE: 0x00000062,\n            EMR_CREATECOLORSPACE: 0x00000063,\n            EMR_SETCOLORSPACE: 0x00000064,\n            EMR_DELETECOLORSPACE: 0x00000065,\n            EMR_GLSRECORD: 0x00000066,\n            EMR_GLSBOUNDEDRECORD: 0x00000067,\n            EMR_PIXELFORMAT: 0x00000068,\n            EMR_DRAWESCAPE: 0x00000069,\n            EMR_EXTESCAPE: 0x0000006A,\n            EMR_SMALLTEXTOUT: 0x0000006C,\n            EMR_FORCEUFIMAPPING: 0x0000006D,\n            EMR_NAMEDESCAPE: 0x0000006E,\n            EMR_COLORCORRECTPALETTE: 0x0000006F,\n            EMR_SETICMPROFILEA: 0x00000070,\n            EMR_SETICMPROFILEW: 0x00000071,\n            EMR_ALPHABLEND: 0x00000072,\n            EMR_SETLAYOUT: 0x00000073,\n            EMR_TRANSPARENTBLT: 0x00000074,\n            EMR_GRADIENTFILL: 0x00000076,\n            EMR_SETLINKEDUFIS: 0x00000077,\n            EMR_SETTEXTJUSTIFICATION: 0x00000078,\n            EMR_COLORMATCHTOTARGETW: 0x00000079,\n            EMR_CREATECOLORSPACEW: 0x0000007A,\n        },\n        MetafileEscapes: {\n            NEWFRAME: 0x0001,\n            ABORTDOC: 0x0002,\n            NEXTBAND: 0x0003,\n            SETCOLORTABLE: 0x0004,\n            GETCOLORTABLE: 0x0005,\n            FLUSHOUT: 0x0006,\n            DRAFTMODE: 0x0007,\n            QUERYESCSUPPORT: 0x0008,\n            SETABORTPROC: 0x0009,\n            STARTDOC: 0x000a,\n            ENDDOC: 0x000b,\n            GETPHYSPAGESIZE: 0x000c,\n            GETPRINTINGOFFSET: 0x000d,\n            GETSCALINGFACTOR: 0x000e,\n            META_ESCAPE_ENHANCED_METAFILE: 0x000f,\n            SETPENWIDTH: 0x0010,\n            SETCOPYCOUNT: 0x0011,\n            SETPAPERSOURCE: 0x0012,\n            PASSTHROUGH: 0x0013,\n            GETTECHNOLOGY: 0x0014,\n            SETLINECAP: 0x0015,\n            SETLINEJOIN: 0x0016,\n            SETMITERLIMIT: 0x0017,\n            BANDINFO: 0x0018,\n            DRAWPATTERNRECT: 0x0019,\n            GETVECTORPENSIZE: 0x001a,\n            GETVECTORBRUSHSIZE: 0x001b,\n            ENABLEDUPLEX: 0x001c,\n            GETSETPAPERBINS: 0x001d,\n            GETSETPRINTORIENT: 0x001e,\n            ENUMPAPERBINS: 0x001f,\n            SETDIBSCALING: 0x0020,\n            EPSPRINTING: 0x0021,\n            ENUMPAPERMETRICS: 0x0022,\n            GETSETPAPERMETRICS: 0x0023,\n            POSTSCRIPT_DATA: 0x0025,\n            POSTSCRIPT_IGNORE: 0x0026,\n            GETDEVICEUNITS: 0x002a,\n            GETEXTENDEDTEXTMETRICS: 0x0100,\n            GETPAIRKERNTABLE: 0x0102,\n            EXTTEXTOUT: 0x0200,\n            GETFACENAME: 0x0201,\n            DOWNLOADFACE: 0x0202,\n            METAFILE_DRIVER: 0x0801,\n            QUERYDIBSUPPORT: 0x0c01,\n            BEGIN_PATH: 0x1000,\n            CLIP_TO_PATH: 0x1001,\n            END_PATH: 0x1002,\n            OPEN_CHANNEL: 0x100e,\n            DOWNLOADHEADER: 0x100f,\n            CLOSE_CHANNEL: 0x1010,\n            POSTSCRIPT_PASSTHROUGH: 0x1013,\n            ENCAPSULATED_POSTSCRIPT: 0x1014,\n            POSTSCRIPT_IDENTIFY: 0x1015,\n            POSTSCRIPT_INJECTION: 0x1016,\n            CHECKJPEGFORMAT: 0x1017,\n            CHECKPNGFORMAT: 0x1018,\n            GET_PS_FEATURESETTING: 0x1019,\n            MXDC_ESCAPE: 0x101a,\n            SPCLPASSTHROUGH2: 0x11d8,\n        },\n        MapMode: {\n            MM_TEXT: 1,\n            MM_LOMETRIC: 2,\n            MM_HIMETRIC: 3,\n            MM_LOENGLISH: 4,\n            MM_HIENGLISH: 5,\n            MM_TWIPS: 6,\n            MM_ISOTROPIC: 7,\n            MM_ANISOTROPIC: 8,\n        },\n        StretchMode: {\n            BLACKONWHITE: 1,\n            WHITEONBLACK: 2,\n            COLORONCOLOR: 3,\n            HALFTONE: 4,\n        },\n        MixMode: {\n            TRANSPARENT: 1,\n            OPAQUE: 2,\n        },\n        BrushStyle: {\n            BS_SOLID: 0,\n            BS_NULL: 1,\n            BS_HATCHED: 2,\n            BS_PATTERN: 3,\n            BS_INDEXED: 4,\n            BS_DIBPATTERN: 5,\n            BS_DIBPATTERNPT: 6,\n            BS_PATTERN8X8: 7,\n            BS_DIBPATTERN8X8: 8,\n            BS_MONOPATTERN: 9,\n        },\n        PenStyle: {\n            PS_COSMETIC: 0x00000000,\n            PS_ENDCAP_ROUND: 0x00000000,\n            PS_JOIN_ROUND: 0x00000000,\n            PS_SOLID: 0x00000000,\n            PS_DASH: 0x00000001,\n            PS_DOT: 0x00000002,\n            PS_DASHDOT: 0x00000003,\n            PS_DASHDOTDOT: 0x00000004,\n            PS_NULL: 0x00000005,\n            PS_INSIDEFRAME: 0x00000006,\n            PS_USERSTYLE: 0x00000007,\n            PS_ALTERNATE: 0x00000008,\n            PS_ENDCAP_SQUARE: 0x00000100,\n            PS_ENDCAP_FLAT: 0x00000200,\n            PS_JOIN_BEVEL: 0x00001000,\n            PS_JOIN_MITER: 0x00002000,\n            PS_GEOMETRIC: 0x00010000,\n        },\n        PolygonFillMode: {\n            ALTERNATE: 1,\n            WINDING: 2,\n        },\n        BitmapCompression: {\n            BI_RGB: 0,\n            BI_RLE8: 1,\n            BI_RLE4: 2,\n            BI_BITFIELDS: 3,\n            BI_JPEG: 4,\n            BI_PNG: 5,\n        },\n        RegionMode: {\n            RGN_AND: 1,\n            RGN_OR: 2,\n            RGN_XOR: 3,\n            RGN_DIFF: 4,\n            RGN_COPY: 5,\n        },\n        StockObject: {\n            WHITE_BRUSH: 0x80000000,\n            LTGRAY_BRUSH: 0x80000001,\n            GRAY_BRUSH: 0x80000002,\n            DKGRAY_BRUSH: 0x80000003,\n            BLACK_BRUSH: 0x80000004,\n            NULL_BRUSH: 0x80000005,\n            WHITE_PEN: 0x80000006,\n            BLACK_PEN: 0x80000007,\n            NULL_PEN: 0x80000008,\n            OEM_FIXED_FONT: 0x8000000A,\n            ANSI_FIXED_FONT: 0x8000000B,\n            ANSI_VAR_FONT: 0x8000000C,\n            SYSTEM_FONT: 0x8000000D,\n            DEVICE_DEFAULT_FONT: 0x8000000E,\n            DEFAULT_PALETTE: 0x8000000F,\n            SYSTEM_FIXED_FONT: 0x80000010,\n            DEFAULT_GUI_FONT: 0x80000011,\n            DC_BRUSH: 0x80000012,\n            DC_PEN: 0x80000013,\n        },\n    };\n\n    public static _uniqueId = 0;\n\n    public static log(message: string): void {\n        if (isLoggingEnabled) {\n            console.log(message);\n        }\n    }\n\n    public static _makeUniqueId(prefix: string): string {\n        return \"EMFJS_\" + prefix + (this._uniqueId++);\n    }\n\n    public static _writeUint32Val(uint8arr: Uint8Array, pos: number, val: number): void {\n        uint8arr[pos++] = val & 0xff;\n        uint8arr[pos++] = (val >>> 8) & 0xff;\n        uint8arr[pos++] = (val >>> 16) & 0xff;\n        uint8arr[pos++] = (val >>> 24) & 0xff;\n    }\n\n    public static _blobToBinary(blob: Uint8Array): string {\n        let ret = \"\";\n        const len = blob.length;\n        for (let i = 0; i < len; i++) {\n            ret += String.fromCharCode(blob[i]);\n        }\n        return ret;\n    }\n}\n","/*\n\nThe MIT License (MIT)\n\nCopyright (c) 2016 Tom Zoehner\nCopyright (c) 2018 Thomas Bluemel\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n*/\n\nimport { EMFJSError } from \"./Helper\";\n\nexport class Blob {\n    public pos: number;\n    private blob: Blob | ArrayBuffer;\n    private data: Uint8Array;\n\n    constructor(blob: Blob | ArrayBuffer, offset?: number) {\n        if (blob instanceof Blob) {\n            this.blob = blob.blob;\n            this.data = blob.data;\n            this.pos = offset || blob.pos;\n        } else {\n            this.blob = blob;\n            this.data = new Uint8Array(blob);\n            this.pos = offset || 0;\n        }\n    }\n\n    public eof(): boolean {\n        return this.pos >= this.data.length;\n    }\n\n    public seek(newpos: number): void {\n        if (newpos < 0 || newpos > this.data.length) {\n            throw new EMFJSError(\"Invalid seek position\");\n        }\n        this.pos = newpos;\n    }\n\n    public skip(cnt: number): void {\n        const newPos = this.pos + cnt;\n        if (newPos > this.data.length) {\n            throw new EMFJSError(\"Unexpected end of file\");\n        }\n        this.pos = newPos;\n    }\n\n    public readBinary(cnt: number): string {\n        const end = this.pos + cnt;\n        if (end > this.data.length) {\n            throw new EMFJSError(\"Unexpected end of file\");\n        }\n        let ret = \"\";\n        while (cnt-- > 0) {\n            ret += String.fromCharCode(this.data[this.pos++]);\n        }\n        return ret;\n    }\n\n    public readInt8(): number {\n        if (this.pos + 1 > this.data.length) {\n            throw new EMFJSError(\"Unexpected end of file\");\n        }\n        return this.data[this.pos++];\n    }\n\n    public readUint8(): number {\n        return this.readInt8() >>> 0;\n    }\n\n    public readInt32(): number {\n        if (this.pos + 4 > this.data.length) {\n            throw new EMFJSError(\"Unexpected end of file\");\n        }\n        let val = this.data[this.pos++];\n        val |= this.data[this.pos++] << 8;\n        val |= this.data[this.pos++] << 16;\n        val |= this.data[this.pos++] << 24;\n        return val;\n    }\n\n    public readUint32(): number {\n        return this.readInt32() >>> 0;\n    }\n\n    public readUint16(): number {\n        if (this.pos + 2 > this.data.length) {\n            throw new EMFJSError(\"Unexpected end of file\");\n        }\n        let val = this.data[this.pos++];\n        val |= this.data[this.pos++] << 8;\n        return val;\n    }\n\n    public readInt16(): number {\n        let val = this.readUint16();\n        if (val > 32767) {\n            val -= 65536;\n        }\n        return val;\n    }\n\n    public readString(length: number): string {\n        if (this.pos + length > this.data.length) {\n            throw new EMFJSError(\"Unexpected end of file\");\n        }\n        let ret = \"\";\n        for (let i = 0; i < length; i++) {\n            ret += String.fromCharCode(this.data[this.pos++] >>> 0);\n        }\n        return ret;\n    }\n\n    public readNullTermString(maxSize: number): string {\n        let ret = \"\";\n        if (maxSize > 0) {\n            maxSize--;\n            for (let i = 0; i < maxSize; i++) {\n                if (this.pos + i + 1 > this.data.length) {\n                    throw new EMFJSError(\"Unexpected end of file\");\n                }\n                const byte = this.data[this.pos + i] >>> 0;\n                if (byte === 0) {\n                    break;\n                }\n                ret += String.fromCharCode(byte);\n            }\n        }\n        return ret;\n    }\n\n    public readFixedSizeUnicodeString(fixedSizeChars: number): string {\n        let ret = \"\";\n        for (let i = 0; i < fixedSizeChars; i++) {\n            const charCode = this.readUint16();\n            if (charCode === 0) {\n                if (++i < fixedSizeChars) {\n                    this.skip((fixedSizeChars - i) * 2);\n                }\n                break;\n            }\n            ret += String.fromCharCode(charCode);\n        }\n        return ret;\n    }\n}\n","/*\n\nThe MIT License (MIT)\n\nCopyright (c) 2016 Tom Zoehner\nCopyright (c) 2018 Thomas Bluemel\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n*/\n\nimport { Blob } from \"./Blob\";\nimport { EMFJSError } from \"./Helper\";\n\nexport class PointS {\n    public x: number;\n    public y: number;\n\n    constructor(reader: Blob, x?: number, y?: number) {\n        if (reader != null) {\n            this.x = reader.readInt16();\n            this.y = reader.readInt16();\n        } else {\n            this.x = x;\n            this.y = y;\n        }\n    }\n\n    public clone(): PointS {\n        return new PointS(null, this.x, this.y);\n    }\n\n    public toString(): string {\n        return \"{x: \" + this.x + \", y: \" + this.y + \"}\";\n    }\n}\n\nexport class PointL {\n    public x: number;\n    public y: number;\n\n    constructor(reader: Blob, x?: number, y?: number) {\n        if (reader != null) {\n            this.x = reader.readInt32();\n            this.y = reader.readInt32();\n        } else {\n            this.x = x;\n            this.y = y;\n        }\n    }\n\n    public clone(): PointL {\n        return new PointL(null, this.x, this.y);\n    }\n\n    public toString(): string {\n        return \"{x: \" + this.x + \", y: \" + this.y + \"}\";\n    }\n}\n\nexport class RectL {\n    public left: number;\n    public top: number;\n    public right: number;\n    public bottom: number;\n\n    constructor(reader: Blob, left?: number, top?: number, right?: number, bottom?: number) {\n        if (reader != null) {\n            this.left = reader.readInt32();\n            this.top = reader.readInt32();\n            this.right = reader.readInt32();\n            this.bottom = reader.readInt32();\n        } else {\n            this.bottom = bottom;\n            this.right = right;\n            this.top = top;\n            this.left = left;\n        }\n    }\n\n    public clone(): RectL {\n        return new RectL(null, this.left, this.top, this.right, this.bottom);\n    }\n\n    public toString(): string {\n        return \"{left: \" + this.left + \", top: \" + this.top + \", right: \" + this.right\n            + \", bottom: \" + this.bottom + \"}\";\n    }\n\n    public empty(): boolean {\n        return this.left >= this.right || this.top >= this.bottom;\n    }\n\n    public intersect(rectL: RectL): null | RectL {\n        if (this.empty() || rectL.empty()) {\n            return null;\n        }\n        if (this.left >= rectL.right || this.top >= rectL.bottom ||\n            this.right <= rectL.left || this.bottom <= rectL.top) {\n            return null;\n        }\n        return new RectL(null, Math.max(this.left, rectL.left), Math.max(this.top, rectL.top),\n            Math.min(this.right, rectL.right), Math.min(this.bottom, rectL.bottom));\n    }\n}\n\nexport class SizeL {\n    public cx: number;\n    public cy: number;\n\n    constructor(reader: Blob, cx?: number, cy?: number) {\n        if (reader != null) {\n            this.cx = reader.readUint32();\n            this.cy = reader.readUint32();\n        } else {\n            this.cx = cx;\n            this.cy = cy;\n        }\n    }\n\n    public clone(): SizeL {\n        return new SizeL(null, this.cx, this.cy);\n    }\n\n    public toString(): string {\n        return \"{cx: \" + this.cx + \", cy: \" + this.cy + \"}\";\n    }\n}\n\nexport class Obj {\n    public type: string;\n\n    constructor(type: string) {\n        this.type = type;\n    }\n\n    public clone(): Obj {\n        throw new EMFJSError(\"clone not implemented\");\n    }\n\n    public toString(): string {\n        throw new EMFJSError(\"toString not implemented\");\n    }\n}\n","/*\n\nThe MIT License (MIT)\n\nCopyright (c) 2016 Tom Zoehner\nCopyright (c) 2018 Thomas Bluemel\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n*/\n\nimport { Blob } from \"./Blob\";\nimport { EMFJSError, Helper } from \"./Helper\";\nimport { Obj, RectL } from \"./Primitives\";\n\nexport class Region extends Obj {\n    public bounds: RectL;\n    public scans: Scan[];\n    public complexity: number;\n\n    constructor(reader: Blob, copy?: Region) {\n        super(\"region\");\n        if (reader != null) {\n            const hdrSize = reader.readUint32();\n            if (hdrSize !== 32) {\n                throw new EMFJSError(\"Invalid region header\");\n            }\n            reader.skip(4);\n            const rectCnt = reader.readUint32();\n            const rgnSize = reader.readUint32();\n            if (rectCnt * 16 !== rgnSize) {\n                throw new EMFJSError(\"Invalid region data\");\n            }\n\n            this.bounds = new RectL(reader);\n            this.scans = [];\n            let scanLine;\n            for (let i = 0; i < rectCnt; i++) {\n                const r = new RectL(reader);\n                if (!!scanLine || scanLine.top !== r.top || scanLine.bottom !== r.bottom) {\n                    scanLine = new Scan(r);\n                    this.scans.push(scanLine);\n                } else {\n                    scanLine.append(r);\n                }\n            }\n            this._updateComplexity();\n        } else if (copy != null) {\n            this.bounds = copy.bounds != null ? copy.bounds.clone() : null;\n            if (copy.scans != null) {\n                this.scans = [];\n                for (let i = 0; i < copy.scans.length; i++) {\n                    this.scans.push(copy.scans[i].clone());\n                }\n            } else {\n                this.scans = null;\n            }\n            this.complexity = copy.complexity;\n        } else {\n            this.bounds = null;\n            this.scans = null;\n            this.complexity = 0;\n        }\n    }\n\n    public clone(): Region {\n        return new Region(null, this);\n    }\n\n    public toString(): string {\n        const _complexity = [\"null\", \"simple\", \"complex\"];\n        return \"{complexity: \" + _complexity[this.complexity]\n            + \" bounds: \" + (this.bounds != null ? this.bounds.toString() : \"[none]\")\n            + \" #scans: \" + (this.scans != null ? this.scans.length : \"[none]\") + \"}\";\n    }\n\n    public _updateComplexity(): void {\n        if (this.bounds == null) {\n            this.complexity = 0;\n            this.scans = null;\n        } else if (this.bounds.empty()) {\n            this.complexity = 0;\n            this.scans = null;\n            this.bounds = null;\n        } else if (this.scans == null) {\n            this.complexity = 1;\n        } else {\n            this.complexity = 2;\n            if (this.scans.length === 1) {\n                const scan = this.scans[0];\n                if (scan.top === this.bounds.top && scan.bottom === this.bounds.bottom && scan.scanlines.length === 1) {\n                    const scanline = scan.scanlines[0];\n                    if (scanline.left === this.bounds.left && scanline.right === this.bounds.right) {\n                        this.scans = null;\n                        this.complexity = 1;\n                    }\n                }\n            }\n        }\n    }\n\n    public subtract(rect: RectL): void {\n        Helper.log(\"[emf] Region \" + this.toString() + \" subtract \" + rect.toString());\n\n        if (this.bounds != null) {\n            const isect = this.bounds.intersect(rect);\n            if (isect != null) { // Only need to do anything if there is any chance of an overlap\n                if (this.scans == null) {\n                    // We currently have a simple region and there is some kind of an overlap.\n                    // We need to create scanlines now.  Simplest method is to fake one scan line\n                    // that equals the simple region and re-use the same logic as for complex regions\n                    this.scans = [];\n                    this.scans.push(new Scan(new RectL(null, this.bounds.left, this.bounds.top,\n                        this.bounds.right, this.bounds.bottom)));\n                    this.complexity = 2;\n                }\n\n                // We (now) have a complex region.  First we skip any scans that are entirely above rect.top\n                // The first scan that falls partially below rect.top needs to be split into two scans.\n                let si = 0;\n                while (si < this.scans.length) {\n                    const scan = this.scans[si];\n                    if (scan.bottom >= rect.top) {\n                        // We need to clone this scan into two so that we can subtract from the second one\n                        const cloned = scan.clone();\n                        scan.bottom = rect.top - 1;\n                        cloned.top = rect.top;\n                        if (scan.top >= scan.bottom) {\n                            this.scans[si] = cloned;\n                        } else {\n                            Helper.log(\"[emf] Region split top scan \" + si + \" for substraction\");\n                            this.scans.splice(++si, 0, cloned);\n                        }\n                        break;\n                    }\n                    si++;\n                }\n\n                // Now find the first one that falls at least partially below rect.bottom, which needs to be\n                // split if it is only partially below rect.bottom\n                const first = si;\n                while (si < this.scans.length) {\n                    const scan = this.scans[si];\n                    if (scan.top > rect.bottom) {\n                        break;\n                    }\n                    if (scan.bottom > rect.bottom) {\n                        // We need to clone this scan into two so that we can subtract from the first one\n                        const cloned = scan.clone();\n                        scan.bottom = rect.bottom;\n                        cloned.top = rect.bottom + 1;\n                        if (scan.top >= scan.bottom) {\n                            this.scans[si] = cloned;\n                        } else {\n                            Helper.log(\"[emf] Region split bottom scan \" + si + \" for substraction\");\n                            this.scans.splice(++si, 0, cloned);\n                        }\n                        break;\n                    }\n                    si++;\n                }\n\n                // Now perform a subtraction on each scan in between rect.top and rect.bottom.  Because we\n                // cloned scans that partially overlapped rect.top and rect.bottom, we don't have to\n                // account for this anymore.\n                if (first < this.scans.length) {\n                    let last = si;\n                    si = first;\n                    while (si < last) {\n                        const scan = this.scans[si];\n                        if (!scan.subtract(rect.left, rect.right)) {\n                            Helper.log(\"[emf] Region remove now empty scan \" + si + \" due to subtraction\");\n                            this.scans.splice(si, 1);\n                            last--;\n                            continue;\n                        }\n\n                        si++;\n                    }\n                }\n\n                // Update bounds\n                if (this.scans != null) {\n                    let left;\n                    let top;\n                    let right;\n                    let bottom;\n                    const len = this.scans.length;\n                    for (let i = 0; i < len; i++) {\n                        const scan = this.scans[i];\n                        if (i === 0) {\n                            top = scan.top;\n                        }\n                        if (i === len - 1) {\n                            bottom = scan.bottom;\n                        }\n\n                        const slen = scan.scanlines.length;\n                        if (slen > 0) {\n                            let scanline = scan.scanlines[0];\n                            if (left == null || scanline.left < left) {\n                                left = scanline.left;\n                            }\n                            scanline = scan.scanlines[slen - 1];\n                            if (right == null || scanline.right > right) {\n                                right = scanline.right;\n                            }\n                        }\n                    }\n\n                    if (left != null && top != null && right != null && bottom != null) {\n                        this.bounds = new RectL(null, left, top, right, bottom);\n                        this._updateComplexity();\n                    } else {\n                        // This has to be a null region now\n                        this.bounds = null;\n                        this.scans = null;\n                        this.complexity = 0;\n                    }\n                } else {\n                    this._updateComplexity();\n                }\n            }\n        }\n\n        Helper.log(\"[emf] Region subtraction -> \" + this.toString());\n    }\n\n    public intersect(rect: RectL): void {\n        Helper.log(\"[emf] Region \" + this.toString() + \" intersect with \" + rect.toString());\n        if (this.bounds != null) {\n            this.bounds = this.bounds.intersect(rect);\n            if (this.bounds != null) {\n                if (this.scans != null) {\n                    let si = 0;\n                    // Remove any scans that are entirely above the new bounds.top\n                    while (si < this.scans.length) {\n                        const scan = this.scans[si];\n                        if (scan.bottom < this.bounds.top) {\n                            si++;\n                        } else {\n                            break;\n                        }\n                    }\n                    if (si > 0) {\n                        Helper.log(\"[emf] Region remove \" + si + \" scans from top\");\n                        this.scans.splice(0, si);\n\n                        // Adjust the first scan's top to match the new bounds.top\n                        if (this.scans.length > 0) {\n                            this.scans[0].top = this.bounds.top;\n                        }\n                    }\n\n                    // Get rid of anything that falls outside the new bounds.left/bounds.right\n                    si = 0;\n                    while (si < this.scans.length) {\n                        const scan = this.scans[si];\n                        if (scan.top > this.bounds.bottom) {\n                            // Remove this and all remaining scans that fall entirely below the new bounds.bottom\n                            Helper.log(\"[emf] Region remove \" + (this.scans.length - si) + \" scans from bottom\");\n                            this.scans.splice(si, this.scans.length - si);\n                            break;\n                        }\n                        if (!scan.intersect(this.bounds.left, this.bounds.right)) {\n                            // Remove now empty scan\n                            Helper.log(\"[emf] Region remove now empty scan \" + si + \" due to intersection\");\n                            this.scans.splice(si, 1);\n                            continue;\n                        }\n                        si++;\n                    }\n\n                    // If there are any scans left, adjust the last one's bottom to the new bounds.bottom\n                    if (this.scans.length > 0) {\n                        this.scans[this.scans.length - 1].bottom = this.bounds.bottom;\n                    }\n\n                    this._updateComplexity();\n                }\n            } else {\n                this.scans = null;\n                this.complexity = 0;\n            }\n        }\n        Helper.log(\"[emf] Region intersection -> \" + this.toString());\n    }\n\n    public offset(offX: number, offY: number): void {\n        if (this.bounds != null) {\n            this.bounds.left += offX;\n            this.bounds.top += offY;\n            this.bounds.right += offX;\n            this.bounds.bottom += offY;\n        }\n\n        if (this.scans != null) {\n            const slen = this.scans.length;\n            for (let si = 0; si < slen; si++) {\n                const scan = this.scans[si];\n                scan.top += offY;\n                scan.bottom += offY;\n\n                const len = scan.scanlines.length;\n                for (let i = 0; i < len; i++) {\n                    const scanline = scan.scanlines[i];\n                    scanline.left += offX;\n                    scanline.right += offX;\n                }\n            }\n        }\n    }\n}\n\nexport function CreateSimpleRegion(left: number, top: number, right: number, bottom: number): Region {\n    const rgn = new Region(null, null);\n    rgn.bounds = new RectL(null, left, top, right, bottom);\n    rgn._updateComplexity();\n    return rgn;\n}\n\nexport class Scan {\n    public top: number;\n    public bottom: number;\n    public scanlines: { left: number, right: number }[];\n\n    constructor(r: RectL, copy?: Scan) {\n        if (r != null) {\n            this.top = r.top;\n            this.bottom = r.bottom;\n            this.scanlines = [{left: r.left, right: r.right}];\n        } else if (copy != null) {\n            this.top = copy.top;\n            this.bottom = copy.bottom;\n            this.scanlines = [];\n            for (let i = 0; i < copy.scanlines.length; i++) {\n                const scanline = copy.scanlines[i];\n                this.scanlines.push({left: scanline.left, right: scanline.right});\n            }\n        }\n    }\n\n    public clone(): Scan {\n        return new Scan(null, this);\n    }\n\n    public append(r: RectL): void {\n        this.scanlines.push({left: r.left, right: r.right});\n    }\n\n    public subtract(left: number, right: number): boolean {\n        let i;\n\n        // Keep everything on the left side\n        i = 0;\n        while (i < this.scanlines.length) {\n            const scanline = this.scanlines[i];\n            if (scanline.left <= left) {\n                if (scanline.right >= left) {\n                    scanline.right = left - 1;\n                    if (scanline.left >= scanline.right) {\n                        this.scanlines.splice(i, 1);\n                        continue;\n                    }\n                }\n                i++;\n            } else {\n                break;\n            }\n        }\n\n        // Find the first one that may exceed to the right side\n        const first = i;\n        let cnt = 0;\n        while (i < this.scanlines.length) {\n            const scanline = this.scanlines[i];\n            if (scanline.right > right) {\n                scanline.left = right;\n                cnt = i - first;\n                if (scanline.left >= scanline.right) {\n                    cnt++;\n                }\n                break;\n            }\n            i++;\n        }\n\n        // Delete everything we're subtracting\n        if (cnt > 0 && first < this.scanlines.length) {\n            this.scanlines.splice(first, cnt);\n        }\n\n        return this.scanlines.length > 0;\n    }\n\n    public intersect(left: number, right: number): boolean {\n        // Get rid of anything that falls entirely outside to the left\n        for (let i = 0; i < this.scanlines.length; i++) {\n            const scanline = this.scanlines[i];\n            if (scanline.left >= left || scanline.right >= left) {\n                if (i > 0) {\n                    this.scanlines.splice(0, i);\n                }\n                break;\n            }\n        }\n\n        if (this.scanlines.length > 0) {\n            // Adjust the first to match the left, if needed\n            let scanline = this.scanlines[0];\n            if (scanline.left < left) {\n                scanline.left = left;\n            }\n\n            // Get rid of anything that falls entirely outside to the right\n            for (let i = 0; i < this.scanlines.length; i++) {\n                scanline = this.scanlines[i];\n                if (scanline.left > right) {\n                    this.scanlines.splice(i, this.scanlines.length - i);\n                    break;\n                }\n            }\n\n            if (this.scanlines.length > 0) {\n                // Adjust the last to match the right, if needed\n                scanline = this.scanlines[this.scanlines.length - 1];\n                if (scanline.right > right) {\n                    scanline.right = right;\n                }\n            }\n        }\n        return this.scanlines.length > 0;\n    }\n}\n","/*\n\nThe MIT License (MIT)\n\nCopyright (c) 2016 Tom Zoehner\nCopyright (c) 2018 Thomas Bluemel\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n*/\n\nimport { Blob } from \"./Blob\";\nimport { Helper } from \"./Helper\";\n\ninterface Bitmap {\n    getWidth(): number\n\n    getHeight(): number\n}\n\nclass BitmapCoreHeader {\n    public width: number;\n    public height: number;\n    public planes: number;\n    public bitcount: number;\n\n    constructor(reader: Blob, skipsize: boolean) {\n        if (skipsize) {\n            reader.skip(4);\n        }\n        this.width = reader.readUint16();\n        this.height = reader.readUint16();\n        this.planes = reader.readUint16();\n        this.bitcount = reader.readUint16();\n    }\n\n    public colors(): number {\n        return this.bitcount <= 8 ? 1 << this.bitcount : 0;\n    }\n}\n\nclass BitmapInfoHeader {\n    public width: number;\n    public height: number;\n    public planes: number;\n    public bitcount: number;\n    public compression: number;\n    public sizeimage: number;\n    public xpelspermeter: number;\n    public ypelspermeter: number;\n    public clrused: number;\n    public clrimportant: number;\n\n    constructor(reader: Blob, skipsize: boolean) {\n        if (skipsize) {\n            reader.skip(4);\n        }\n        this.width = reader.readInt32();\n        this.height = reader.readInt32();\n        this.planes = reader.readUint16();\n        this.bitcount = reader.readUint16();\n        this.compression = reader.readUint32();\n        this.sizeimage = reader.readUint32();\n        this.xpelspermeter = reader.readInt32();\n        this.ypelspermeter = reader.readInt32();\n        this.clrused = reader.readUint32();\n        this.clrimportant = reader.readUint32();\n    }\n\n    public colors(): number {\n        if (this.clrused !== 0) {\n            return this.clrused < 256 ? this.clrused : 256;\n        } else {\n            return this.bitcount > 8 ? 0 : 1 << this.bitcount;\n        }\n    }\n}\n\nexport class BitmapInfo implements Bitmap {\n    private _usergb: boolean;\n    private _infosize: number;\n    private _header: BitmapCoreHeader | BitmapInfoHeader;\n\n    constructor(reader: Blob, usergb: boolean) {\n        this._usergb = usergb;\n        const hdrsize = reader.readUint32();\n        this._infosize = hdrsize;\n        if (hdrsize === Helper.GDI.BITMAPCOREHEADER_SIZE) {\n            this._header = new BitmapCoreHeader(reader, false);\n            this._infosize += this._header.colors() * (usergb ? 3 : 2);\n        } else {\n            this._header = new BitmapInfoHeader(reader, false);\n            const masks = (this._header as BitmapInfoHeader).compression\n            === Helper.GDI.BitmapCompression.BI_BITFIELDS ? 3 : 0;\n            if (hdrsize <= Helper.GDI.BITMAPINFOHEADER_SIZE + (masks * 4)) {\n                this._infosize = Helper.GDI.BITMAPINFOHEADER_SIZE + (masks * 4);\n            }\n            this._infosize += this._header.colors() * (usergb ? 4 : 2);\n        }\n    }\n\n    public getWidth(): number {\n        return this._header.width;\n    }\n\n    public getHeight(): number {\n        return Math.abs(this._header.height);\n    }\n\n    public infosize(): number {\n        return this._infosize;\n    }\n\n    public header(): BitmapCoreHeader | BitmapInfoHeader {\n        return this._header;\n    }\n}\n\nexport class DIBitmap implements Bitmap {\n    private _reader: Blob;\n    private _offset: number;\n    private _location: any;\n    private _info: BitmapInfo;\n\n    constructor(reader: Blob, bitmapInfo?: any) {\n        this._reader = reader;\n        this._offset = reader.pos;\n        this._location = bitmapInfo;\n        this._info = new BitmapInfo(reader, true);\n    }\n\n    public getWidth(): number {\n        return this._info.getWidth();\n    }\n\n    public getHeight(): number {\n        return this._info.getHeight();\n    }\n\n    public totalSize(): number {\n        return this._location.header.size + this._location.data.size;\n    }\n\n    public makeBitmapFileHeader(): string {\n        const buf = new ArrayBuffer(14);\n        const view = new Uint8Array(buf);\n        view[0] = 0x42;\n        view[1] = 0x4d;\n        Helper._writeUint32Val(view, 2, this.totalSize() + 14);\n        Helper._writeUint32Val(view, 10, this._info.infosize() + 14);\n        return Helper._blobToBinary(view);\n    }\n\n    public base64ref(): string {\n        const prevpos = this._reader.pos;\n        this._reader.seek(this._offset);\n        let mime = \"image/bmp\";\n        const header = this._info.header();\n        let data;\n        if (header instanceof BitmapInfoHeader && header.compression != null) {\n            switch (header.compression) {\n                case Helper.GDI.BitmapCompression.BI_JPEG:\n                    mime = \"data:image/jpeg\";\n                    break;\n                case Helper.GDI.BitmapCompression.BI_PNG:\n                    mime = \"data:image/png\";\n                    break;\n                default:\n                    data = this.makeBitmapFileHeader();\n                    break;\n            }\n        } else {\n            data = this.makeBitmapFileHeader();\n        }\n\n        this._reader.seek(this._location.header.offset);\n        if (data != null) {\n            data += this._reader.readBinary(this._location.header.size);\n        } else {\n            data = this._reader.readBinary(this._location.header.size);\n        }\n\n        this._reader.seek(this._location.data.offset);\n        data += this._reader.readBinary(this._location.data.size);\n\n        const ref = \"data:\" + mime + \";base64,\" + btoa(data);\n        this._reader.seek(prevpos);\n        return ref;\n    }\n}\n","/*\n\nThe MIT License (MIT)\n\nCopyright (c) 2016 Tom Zoehner\nCopyright (c) 2018 Thomas Bluemel\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n*/\n\nimport { DIBitmap } from \"./Bitmap\";\nimport { Blob } from \"./Blob\";\nimport { Helper } from \"./Helper\";\nimport { Obj, PointL } from \"./Primitives\";\n\nexport class ColorRef {\n    public r: number;\n    public g: number;\n    public b: number;\n\n    constructor(reader: Blob, r?: number, g?: number, b?: number) {\n        if (reader != null) {\n            this.r = reader.readUint8();\n            this.g = reader.readUint8();\n            this.b = reader.readUint8();\n            reader.skip(1);\n        } else {\n            this.r = r;\n            this.g = g;\n            this.b = b;\n        }\n    }\n\n    public clone(): ColorRef {\n        return new ColorRef(null, this.r, this.g, this.b);\n    }\n\n    public toHex(): string {\n        const rgb = (this.r << 16) | (this.g << 8) | this.b;\n        return (0x1000000 + rgb).toString(16).slice(1);\n    }\n\n    public toString(): string {\n        return \"{r: \" + this.r + \", g: \" + this.g + \", b: \" + this.b + \"}\";\n    }\n}\n\nexport class Font extends Obj {\n    public height: number;\n    public width: number;\n    public escapement: number;\n    public orientation: number;\n    public weight: number;\n    public italic: number;\n    public underline: number;\n    public strikeout: number;\n    public charset: number;\n    public outprecision: number;\n    public clipprecision: number;\n    public quality: number;\n    public pitch: number;\n    public family: number;\n    public facename: string;\n\n    constructor(reader: Blob, copy: Font | number) {\n        super(\"font\");\n        if (reader != null) {\n            this.height = reader.readInt32();\n            this.width = reader.readInt32();\n            this.escapement = reader.readInt32();\n            this.orientation = reader.readInt32();\n            this.weight = reader.readInt32();\n            this.italic = reader.readUint8();\n            this.underline = reader.readUint8();\n            this.strikeout = reader.readUint8();\n            this.charset = reader.readUint8();\n            this.outprecision = reader.readUint8();\n            this.clipprecision = reader.readUint8();\n            this.quality = reader.readUint8();\n            const pitchAndFamily = reader.readUint8();\n            this.pitch = pitchAndFamily & 0xf; // TODO: double check\n            this.family = (pitchAndFamily >> 6) & 0x3; // TODO: double check\n\n            const dataLength = copy as number;\n            const start = reader.pos;\n            this.facename = reader.readFixedSizeUnicodeString(Math.min(dataLength - (reader.pos - start), 32));\n        } else if (copy != null) {\n            copy = copy as Font;\n            this.height = copy.height;\n            this.width = copy.width;\n            this.escapement = copy.escapement;\n            this.orientation = copy.orientation;\n            this.weight = copy.weight;\n            this.italic = copy.italic;\n            this.underline = copy.underline;\n            this.strikeout = copy.strikeout;\n            this.charset = copy.charset;\n            this.outprecision = copy.outprecision;\n            this.clipprecision = copy.clipprecision;\n            this.quality = copy.quality;\n            this.pitch = copy.pitch;\n            this.family = copy.family;\n            this.facename = copy.facename;\n        } else {\n            // TODO: Values for a default font?\n            this.height = -80;\n            this.width = 0;\n            this.escapement = 0;\n            this.orientation = 0;\n            this.weight = 400;\n            this.italic = 0;\n            this.underline = 0;\n            this.strikeout = 0;\n            this.charset = 0;\n            this.outprecision = 0;\n            this.clipprecision = 0;\n            this.quality = 0;\n            this.pitch = 0;\n            this.family = 0;\n            this.facename = \"Helvetica\";\n        }\n    }\n\n    public clone(): Font {\n        return new Font(null, this);\n    }\n\n    public toString(): string {\n        return JSON.stringify(this);\n    }\n}\n\nexport class Brush extends Obj {\n    public style: number;\n    public color: ColorRef;\n    public pattern: DIBitmap;\n    public dibpatternpt: DIBitmap;\n    public hatchstyle: number;\n\n    constructor(reader: Blob, copy?: {\n        style?: number, color?: ColorRef, pattern?: DIBitmap,\n        dibpatternpt?: DIBitmap, hatchstyle?: number\n    }) {\n        super(\"brush\");\n        if (reader != null) {\n            const start = reader.pos;\n\n            this.style = reader.readUint32();\n            switch (this.style) {\n                case Helper.GDI.BrushStyle.BS_SOLID:\n                    this.color = new ColorRef(reader);\n                    break;\n                case Helper.GDI.BrushStyle.BS_PATTERN:\n                    this.pattern = new DIBitmap(reader);\n                    break;\n                case Helper.GDI.BrushStyle.BS_DIBPATTERNPT:\n                    this.dibpatternpt = new DIBitmap(reader);\n                    break;\n                case Helper.GDI.BrushStyle.BS_HATCHED:\n                    this.color = new ColorRef(reader);\n                    this.hatchstyle = reader.readUint32();\n                    break;\n            }\n\n            reader.seek(start + 12);\n        } else {\n            this.style = copy.style;\n            switch (this.style) {\n                case Helper.GDI.BrushStyle.BS_SOLID:\n                    this.color = copy.color.clone();\n                    break;\n                case Helper.GDI.BrushStyle.BS_PATTERN:\n                    this.pattern = copy.pattern;\n                    break;\n                case Helper.GDI.BrushStyle.BS_DIBPATTERNPT:\n                    this.dibpatternpt = copy.dibpatternpt;\n                    break;\n                case Helper.GDI.BrushStyle.BS_HATCHED:\n                    this.color = copy.color.clone();\n                    this.hatchstyle = copy.hatchstyle;\n                    break;\n            }\n        }\n    }\n\n    public clone(): Brush {\n        return new Brush(null, this);\n    }\n\n    public toString(): string {\n        let ret = \"{style: \" + this.style;\n        switch (this.style) {\n            case Helper.GDI.BrushStyle.BS_SOLID:\n                ret += \", color: \" + this.color.toString();\n                break;\n            case Helper.GDI.BrushStyle.BS_HATCHED:\n                ret += \", color: \" + this.color.toString() + \", hatchstyle: \" + this.hatchstyle;\n                break;\n        }\n        return ret + \"}\";\n    }\n}\n\nexport class Pen extends Obj {\n    public style: number | { header: { off: number, size: number }, data: { off: number, size: number } };\n    public width: number;\n    public brush: Brush;\n    public color: ColorRef;\n\n    constructor(reader: Blob, style?: number | { header: { off: number, size: number }, data: { off: number, size: number } },\n                width?: number, color?: ColorRef, brush?: Brush) {\n        super(\"pen\");\n        if (reader != null) {\n            if (style != null) {\n                // LogPenEx\n                this.style = reader.readUint32() & 0xFF;\n                this.width = reader.readUint32();\n                this.brush = new Brush(reader);\n                this.color = this.brush.color != null ? this.brush.color.clone() : new ColorRef(null, 0, 0, 0);\n                // TODO: NumStyleEntries, StyleEntry\n            } else {\n                // LogPen\n                this.style = reader.readUint32() & 0xFF;\n                this.width = (new PointL(reader)).x;\n                this.color = new ColorRef(reader);\n            }\n        } else {\n            this.style = style;\n            this.width = width;\n            if (color != null) {\n                this.color = color;\n            }\n            if (brush != null) {\n                this.brush = brush;\n            }\n        }\n    }\n\n    public clone(): Pen {\n        return new Pen(null, this.style, this.width, this.color != null ? this.color.clone() : null,\n            this.brush != null ? this.brush.clone() : null);\n    }\n\n    public toString(): string {\n        return \"{style: \" + this.style + \", width: \" + this.width\n            + \", color: \" + (this.color != null ? this.color.toString() : \"none\") + \"}\";\n    }\n}\n","/*\n\nThe MIT License (MIT)\n\nCopyright (c) 2016 Tom Zoehner\nCopyright (c) 2018 Thomas Bluemel\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n*/\n\nimport { Blob } from \"./Blob\";\nimport { GDIContext } from \"./GDIContext\";\nimport { EMFJSError, Helper } from \"./Helper\";\nimport { PointL, PointS, RectL, SizeL } from \"./Primitives\";\nimport { Region } from \"./Region\";\nimport { Brush, ColorRef, Pen } from \"./Style\";\n\nclass EmfHeader {\n    private size: number;\n    private bounds: RectL;\n    private frame: RectL;\n    private nPalEntries: number;\n    private refDevCx: number;\n    private refDevCy: number;\n    private refDevCxMm: number;\n    private refDevCyMm: number;\n    private description: string;\n    private displayDevCxUm: number;\n    private displayDevCyUm: number;\n\n    constructor(reader: Blob, headerSize: number) {\n        const recordStart = reader.pos - 8;\n\n        this.size = headerSize;\n        this.bounds = new RectL(reader);\n        this.frame = new RectL(reader);\n        if (reader.readUint32() !== Helper.GDI.FormatSignature.ENHMETA_SIGNATURE) {\n            throw new EMFJSError(\"Invalid header signature\");\n        }\n        reader.skip(4); // version\n        reader.skip(4); // bytes (size of metafile)\n        reader.skip(4); // number of records\n        reader.skip(2); // number of handles\n        reader.skip(2); // reserved\n        const descriptionLen = reader.readUint32();\n        const descriptionOff = reader.readUint32();\n        this.nPalEntries = reader.readUint32();\n        this.refDevCx = reader.readUint32();\n        this.refDevCy = reader.readUint32();\n        this.refDevCxMm = reader.readUint32();\n        this.refDevCyMm = reader.readUint32();\n\n        let hdrSize = headerSize;\n        if (descriptionLen > 0) {\n            if (descriptionOff < 88) {\n                throw new EMFJSError(\"Invalid header description offset\");\n            }\n\n            hdrSize = descriptionOff + (descriptionLen * 2);\n            if (hdrSize > headerSize) {\n                throw new EMFJSError(\"Invalid header description length\");\n            }\n\n            const prevPos = reader.pos;\n            reader.seek(recordStart + descriptionOff);\n            this.description = reader.readFixedSizeUnicodeString(descriptionLen);\n            reader.seek(prevPos);\n        } else {\n            this.description = \"\";\n        }\n\n        if (hdrSize >= 100) {\n            // We have a EmfMetafileHeaderExtension1 record\n            const pixelFormatSize = reader.readUint32();\n            const pixelFormatOff = reader.readUint32();\n            const haveOpenGl = reader.readUint32();\n            if (haveOpenGl !== 0) {\n                throw new EMFJSError(\"OpenGL records are not yet supported\");\n            }\n\n            if (pixelFormatOff !== 0) {\n                if (pixelFormatOff < 100 || pixelFormatOff < hdrSize) {\n                    throw new EMFJSError(\"Invalid pixel format offset\");\n                }\n\n                hdrSize = pixelFormatOff + pixelFormatSize;\n                if (hdrSize > headerSize) {\n                    throw new EMFJSError(\"Invalid pixel format size\");\n                }\n\n                // TODO: read pixel format blob\n            }\n\n            if (hdrSize >= 108) {\n                // We have a EmfMetafileHeaderExtension2 record\n                this.displayDevCxUm = reader.readUint32(); // in micrometers\n                this.displayDevCyUm = reader.readUint32(); // in micrometers\n            }\n        }\n    }\n\n    public toString(): string {\n        return \"{bounds: \" + this.bounds.toString() + \", frame: \" + this.frame.toString()\n            + \", description: \" + this.description + \"}\";\n    }\n}\n\nexport class EMFRecords {\n    private _records: ((gdi: GDIContext) => void)[];\n    private _header: EmfHeader;\n\n    constructor(reader: Blob, first: number) {\n        this._records = [];\n\n        this._header = new EmfHeader(reader, first);\n\n        let all = false;\n        let curpos = first;\n        main_loop: while (!all) {\n            reader.seek(curpos);\n            const type = reader.readUint32();\n            const size = reader.readUint32();\n            if (size < 8) {\n                throw new EMFJSError(\"Invalid record size\");\n            }\n            switch (type) {\n                case Helper.GDI.RecordType.EMR_EOF:\n                    all = true;\n                    break main_loop;\n                case Helper.GDI.RecordType.EMR_SETMAPMODE: {\n                    const mapMode = reader.readInt32();\n                    this._records.push((gdi) => {\n                        gdi.setMapMode(mapMode);\n                    });\n                    break;\n                }\n                case Helper.GDI.RecordType.EMR_SETWINDOWORGEX: {\n                    const x = reader.readInt32();\n                    const y = reader.readInt32();\n                    this._records.push((gdi) => {\n                        gdi.setWindowOrgEx(x, y);\n                    });\n                    break;\n                }\n                case Helper.GDI.RecordType.EMR_SETWINDOWEXTEX: {\n                    const x = reader.readUint32();\n                    const y = reader.readUint32();\n                    this._records.push((gdi) => {\n                        gdi.setWindowExtEx(x, y);\n                    });\n                    break;\n                }\n                case Helper.GDI.RecordType.EMR_SETVIEWPORTORGEX: {\n                    const x = reader.readInt32();\n                    const y = reader.readInt32();\n                    this._records.push((gdi) => {\n                        gdi.setViewportOrgEx(x, y);\n                    });\n                    break;\n                }\n                case Helper.GDI.RecordType.EMR_SETVIEWPORTEXTEX: {\n                    const x = reader.readUint32();\n                    const y = reader.readUint32();\n                    this._records.push((gdi) => {\n                        gdi.setViewportExtEx(x, y);\n                    });\n                    break;\n                }\n                case Helper.GDI.RecordType.EMR_SAVEDC: {\n                    this._records.push((gdi) => {\n                        gdi.saveDC();\n                    });\n                    break;\n                }\n                case Helper.GDI.RecordType.EMR_RESTOREDC: {\n                    const saved = reader.readInt32();\n                    this._records.push((gdi) => {\n                        gdi.restoreDC(saved);\n                    });\n                    break;\n                }\n                case Helper.GDI.RecordType.EMR_SETBKMODE: {\n                    const bkMode = reader.readUint32();\n                    this._records.push((gdi) => {\n                        gdi.setBkMode(bkMode);\n                    });\n                    break;\n                }\n                case Helper.GDI.RecordType.EMR_SETBKCOLOR: {\n                    const bkColor = new ColorRef(reader);\n                    this._records.push((gdi) => {\n                        gdi.setBkColor(bkColor);\n                    });\n                    break;\n                }\n                case Helper.GDI.RecordType.EMR_CREATEBRUSHINDIRECT: {\n                    const index = reader.readUint32();\n                    const brush = new Brush(reader);\n                    this._records.push((gdi) => {\n                        gdi.createBrush(index, brush);\n                    });\n                    break;\n                }\n                case Helper.GDI.RecordType.EMR_CREATEPEN: {\n                    const index = reader.readUint32();\n                    const pen = new Pen(reader, null);\n                    this._records.push((gdi) => {\n                        gdi.createPen(index, pen);\n                    });\n                    break;\n                }\n                case Helper.GDI.RecordType.EMR_EXTCREATEPEN: {\n                    const index = reader.readUint32();\n                    const offBmi = reader.readUint32();\n                    const cbBmi = reader.readUint32();\n                    const offBits = reader.readUint32();\n                    const cbBits = reader.readUint32();\n                    const pen = new Pen(reader, {\n                        header: {\n                            off: offBmi,\n                            size: cbBmi,\n                        },\n                        data: {\n                            off: offBits,\n                            size: cbBits,\n                        },\n                    });\n                    this._records.push((gdi) => {\n                        gdi.createPen(index, pen);\n                    });\n                    break;\n                }\n                case Helper.GDI.RecordType.EMR_SELECTOBJECT: {\n                    const idx = reader.readUint32();\n                    this._records.push((gdi) => {\n                        gdi.selectObject(idx, null);\n                    });\n                    break;\n                }\n                case Helper.GDI.RecordType.EMR_DELETEOBJECT: {\n                    const idx = reader.readUint32();\n                    this._records.push((gdi) => {\n                        gdi.deleteObject(idx);\n                    });\n                    break;\n                }\n                case Helper.GDI.RecordType.EMR_RECTANGLE: {\n                    const rect = new RectL(reader);\n                    this._records.push((gdi) => {\n                        gdi.rectangle(rect, 0, 0);\n                    });\n                    break;\n                }\n                case Helper.GDI.RecordType.EMR_ROUNDRECT: {\n                    const rect = new RectL(reader);\n                    const corner = new SizeL(reader);\n                    this._records.push((gdi) => {\n                        gdi.rectangle(rect, corner.cx, corner.cy);\n                    });\n                    break;\n                }\n                case Helper.GDI.RecordType.EMR_LINETO: {\n                    const x = reader.readInt32();\n                    const y = reader.readInt32();\n                    this._records.push((gdi) => {\n                        gdi.lineTo(x, y);\n                    });\n                    break;\n                }\n                case Helper.GDI.RecordType.EMR_MOVETOEX: {\n                    const x = reader.readInt32();\n                    const y = reader.readInt32();\n                    this._records.push((gdi) => {\n                        gdi.moveToEx(x, y);\n                    });\n                    break;\n                }\n                case Helper.GDI.RecordType.EMR_POLYGON:\n                case Helper.GDI.RecordType.EMR_POLYGON16: {\n                    const isSmall = (type === Helper.GDI.RecordType.EMR_POLYGON16);\n                    const bounds = new RectL(reader);\n                    let cnt = reader.readUint32();\n                    const points: PointS[] | PointL[] = [];\n                    while (cnt > 0) {\n                        points.push(isSmall ? new PointS(reader) : new PointL(reader));\n                        cnt--;\n                    }\n                    this._records.push((gdi) => {\n                        gdi.polygon(points, bounds, true);\n                    });\n                    break;\n                }\n                case Helper.GDI.RecordType.EMR_POLYPOLYGON:\n                case Helper.GDI.RecordType.EMR_POLYPOLYGON16: {\n                    const isSmall = (type === Helper.GDI.RecordType.EMR_POLYPOLYGON16);\n                    const bounds = new RectL(reader);\n                    const polyCnt = reader.readUint32();\n                    reader.skip(4); // count\n                    const polygonsPtCnts = [];\n                    for (let i = 0; i < polyCnt; i++) {\n                        polygonsPtCnts.push(reader.readUint32());\n                    }\n\n                    const polygons: PointS[][] | PointL[][] = [];\n                    for (let i = 0; i < polyCnt; i++) {\n                        const ptCnt = polygonsPtCnts[i];\n\n                        const p = [];\n                        for (let ip = 0; ip < ptCnt; ip++) {\n                            p.push(isSmall ? new PointS(reader) : new PointL(reader));\n                        }\n                        polygons.push(p);\n                    }\n                    this._records.push((gdi) => {\n                        gdi.polyPolygon(polygons, bounds);\n                    });\n                    break;\n                }\n                case Helper.GDI.RecordType.EMR_SETPOLYFILLMODE: {\n                    const polyfillmode = reader.readUint32();\n                    this._records.push((gdi) => {\n                        gdi.setPolyFillMode(polyfillmode);\n                    });\n                    break;\n                }\n                case Helper.GDI.RecordType.EMR_POLYLINE16:\n                case Helper.GDI.RecordType.EMR_POLYLINETO16: {\n                    const isLineTo = (type === Helper.GDI.RecordType.EMR_POLYLINETO16);\n                    const bounds = new RectL(reader);\n                    let cnt = reader.readUint32();\n                    const points: PointS[] = [];\n                    while (cnt > 0) {\n                        points.push(new PointS(reader));\n                        cnt--;\n                    }\n                    this._records.push((gdi) => {\n                        gdi.polyline(isLineTo, points, bounds);\n                    });\n                    break;\n                }\n                case Helper.GDI.RecordType.EMR_POLYBEZIER:\n                case Helper.GDI.RecordType.EMR_POLYBEZIERTO: {\n                    const isPolyBezierTo = (type === Helper.GDI.RecordType.EMR_POLYBEZIERTO);\n                    const bounds = new RectL(reader);\n                    let cnt = reader.readUint32();\n                    const points: PointL[] = [];\n                    while (cnt > 0) {\n                        points.push(new PointL(reader));\n                        cnt--;\n                    }\n                    this._records.push((gdi) => {\n                        gdi.polybezier(isPolyBezierTo, points, bounds);\n                    });\n                    break;\n                }\n                case Helper.GDI.RecordType.EMR_POLYBEZIER16: {\n                    const bounds = new RectL(reader);\n                    const start = new PointL(reader);\n                    let cnt = reader.readUint32();\n                    const points = [start];\n                    while (cnt > 0) {\n                        points.push(new PointS(reader));\n                        cnt--;\n                    }\n                    this._records.push((gdi) => {\n                        gdi.polybezier(false, points, bounds);\n                    });\n                    break;\n                }\n                case Helper.GDI.RecordType.EMR_POLYBEZIERTO16: {\n                    const bounds = new RectL(reader);\n                    let cnt = reader.readUint32();\n                    const points: PointS[] = [];\n                    while (cnt > 0) {\n                        points.push(new PointS(reader));\n                        cnt--;\n                    }\n                    this._records.push((gdi) => {\n                        gdi.polybezier(true, points, bounds);\n                    });\n                    break;\n                }\n                case Helper.GDI.RecordType.EMR_SETTEXTALIGN: {\n                    const textAlign = reader.readUint32();\n                    this._records.push((gdi) => {\n                        gdi.setTextAlign(textAlign);\n                    });\n                    break;\n                }\n                case Helper.GDI.RecordType.EMR_SETSTRETCHBLTMODE: {\n                    const stretchMode = reader.readUint32();\n                    this._records.push((gdi) => {\n                        gdi.setStretchBltMode(stretchMode);\n                    });\n                    break;\n                }\n                case Helper.GDI.RecordType.EMR_SETBRUSHORGEX: {\n                    const origin = new PointL(reader);\n                    this._records.push((gdi) => {\n                        gdi.setBrushOrgEx(origin);\n                    });\n                    break;\n                }\n                case Helper.GDI.RecordType.EMR_BEGINPATH: {\n                    this._records.push((gdi) => {\n                        gdi.beginPath();\n                    });\n                    break;\n                }\n                case Helper.GDI.RecordType.EMR_ENDPATH: {\n                    this._records.push((gdi) => {\n                        gdi.endPath();\n                    });\n                    break;\n                }\n                case Helper.GDI.RecordType.EMR_ABORTPATH: {\n                    this._records.push((gdi) => {\n                        gdi.abortPath();\n                    });\n                    break;\n                }\n                case Helper.GDI.RecordType.EMR_CLOSEFIGURE: {\n                    this._records.push((gdi) => {\n                        gdi.closeFigure();\n                    });\n                    break;\n                }\n                case Helper.GDI.RecordType.EMR_FILLPATH: {\n                    const bounds = new RectL(reader);\n                    this._records.push((gdi) => {\n                        gdi.fillPath(bounds);\n                    });\n                    break;\n                }\n                case Helper.GDI.RecordType.EMR_STROKEPATH: {\n                    const bounds = new RectL(reader);\n                    this._records.push((gdi) => {\n                        gdi.strokePath(bounds);\n                    });\n                    break;\n                }\n                case Helper.GDI.RecordType.EMR_SELECTCLIPPATH: {\n                    const rgnMode = reader.readUint32();\n                    this._records.push((gdi) => {\n                        gdi.selectClipPath(rgnMode);\n                    });\n                    break;\n                }\n                case Helper.GDI.RecordType.EMR_EXTSELECTCLIPRGN: {\n                    reader.skip(4);\n                    const rgnMode = reader.readUint32();\n                    const region = rgnMode !== Helper.GDI.RegionMode.RGN_COPY ? new Region(reader) : null;\n                    this._records.push((gdi) => {\n                        gdi.selectClipRgn(rgnMode, region);\n                    });\n                    break;\n                }\n                case Helper.GDI.RecordType.EMR_OFFSETCLIPRGN: {\n                    const offset = new PointL(reader);\n                    this._records.push((gdi) => {\n                        gdi.offsetClipRgn(offset);\n                    });\n                    break;\n                }\n                case Helper.GDI.RecordType.EMR_SETMITERLIMIT: {\n                    const miterLimit = reader.readUint32();\n                    this._records.push((gdi) => {\n                        gdi.setMiterLimit(miterLimit);\n                    });\n                    break;\n                }\n                case Helper.GDI.RecordType.EMR_POLYLINE:\n                case Helper.GDI.RecordType.EMR_POLYLINETO:\n                case Helper.GDI.RecordType.EMR_POLYPOLYLINE:\n                case Helper.GDI.RecordType.EMR_SETPIXELV:\n                case Helper.GDI.RecordType.EMR_SETMAPPERFLAGS:\n                case Helper.GDI.RecordType.EMR_SETROP2:\n                case Helper.GDI.RecordType.EMR_SETCOLORADJUSTMENT:\n                case Helper.GDI.RecordType.EMR_SETTEXTCOLOR:\n                case Helper.GDI.RecordType.EMR_SETMETARGN:\n                case Helper.GDI.RecordType.EMR_EXCLUDECLIPRECT:\n                case Helper.GDI.RecordType.EMR_INTERSECTCLIPRECT:\n                case Helper.GDI.RecordType.EMR_SCALEVIEWPORTEXTEX:\n                case Helper.GDI.RecordType.EMR_SCALEWINDOWEXTEX:\n                case Helper.GDI.RecordType.EMR_SETWORLDTRANSFORM:\n                case Helper.GDI.RecordType.EMR_MODIFYWORLDTRANSFORM:\n                case Helper.GDI.RecordType.EMR_ANGLEARC:\n                case Helper.GDI.RecordType.EMR_ELLIPSE:\n                case Helper.GDI.RecordType.EMR_ARC:\n                case Helper.GDI.RecordType.EMR_CHORD:\n                case Helper.GDI.RecordType.EMR_PIE:\n                case Helper.GDI.RecordType.EMR_SELECTPALETTE:\n                case Helper.GDI.RecordType.EMR_CREATEPALETTE:\n                case Helper.GDI.RecordType.EMR_SETPALETTEENTRIES:\n                case Helper.GDI.RecordType.EMR_RESIZEPALETTE:\n                case Helper.GDI.RecordType.EMR_REALIZEPALETTE:\n                case Helper.GDI.RecordType.EMR_EXTFLOODFILL:\n                case Helper.GDI.RecordType.EMR_ARCTO:\n                case Helper.GDI.RecordType.EMR_POLYDRAW:\n                case Helper.GDI.RecordType.EMR_SETARCDIRECTION:\n                case Helper.GDI.RecordType.EMR_STROKEANDFILLPATH:\n                case Helper.GDI.RecordType.EMR_FLATTENPATH:\n                case Helper.GDI.RecordType.EMR_WIDENPATH:\n                case Helper.GDI.RecordType.EMR_COMMENT:\n                case Helper.GDI.RecordType.EMR_FILLRGN:\n                case Helper.GDI.RecordType.EMR_FRAMERGN:\n                case Helper.GDI.RecordType.EMR_INVERTRGN:\n                case Helper.GDI.RecordType.EMR_PAINTRGN:\n                case Helper.GDI.RecordType.EMR_BITBLT:\n                case Helper.GDI.RecordType.EMR_STRETCHBLT:\n                case Helper.GDI.RecordType.EMR_MASKBLT:\n                case Helper.GDI.RecordType.EMR_PLGBLT:\n                case Helper.GDI.RecordType.EMR_SETDIBITSTODEVICE:\n                case Helper.GDI.RecordType.EMR_STRETCHDIBITS:\n                case Helper.GDI.RecordType.EMR_EXTCREATEFONTINDIRECTW:\n                case Helper.GDI.RecordType.EMR_EXTTEXTOUTA:\n                case Helper.GDI.RecordType.EMR_EXTTEXTOUTW:\n                case Helper.GDI.RecordType.EMR_POLYPOLYLINE16:\n                case Helper.GDI.RecordType.EMR_POLYDRAW16:\n                case Helper.GDI.RecordType.EMR_CREATEMONOBRUSH:\n                case Helper.GDI.RecordType.EMR_CREATEDIBPATTERNBRUSHPT:\n                case Helper.GDI.RecordType.EMR_POLYTEXTOUTA:\n                case Helper.GDI.RecordType.EMR_POLYTEXTOUTW:\n                case Helper.GDI.RecordType.EMR_SETICMMODE:\n                case Helper.GDI.RecordType.EMR_CREATECOLORSPACE:\n                case Helper.GDI.RecordType.EMR_SETCOLORSPACE:\n                case Helper.GDI.RecordType.EMR_DELETECOLORSPACE:\n                case Helper.GDI.RecordType.EMR_GLSRECORD:\n                case Helper.GDI.RecordType.EMR_GLSBOUNDEDRECORD:\n                case Helper.GDI.RecordType.EMR_PIXELFORMAT:\n                case Helper.GDI.RecordType.EMR_DRAWESCAPE:\n                case Helper.GDI.RecordType.EMR_EXTESCAPE:\n                case Helper.GDI.RecordType.EMR_SMALLTEXTOUT:\n                case Helper.GDI.RecordType.EMR_FORCEUFIMAPPING:\n                case Helper.GDI.RecordType.EMR_NAMEDESCAPE:\n                case Helper.GDI.RecordType.EMR_COLORCORRECTPALETTE:\n                case Helper.GDI.RecordType.EMR_SETICMPROFILEA:\n                case Helper.GDI.RecordType.EMR_SETICMPROFILEW:\n                case Helper.GDI.RecordType.EMR_ALPHABLEND:\n                case Helper.GDI.RecordType.EMR_SETLAYOUT:\n                case Helper.GDI.RecordType.EMR_TRANSPARENTBLT:\n                case Helper.GDI.RecordType.EMR_GRADIENTFILL:\n                case Helper.GDI.RecordType.EMR_SETLINKEDUFIS:\n                case Helper.GDI.RecordType.EMR_SETTEXTJUSTIFICATION:\n                case Helper.GDI.RecordType.EMR_COLORMATCHTOTARGETW:\n                case Helper.GDI.RecordType.EMR_CREATECOLORSPACEW:\n                default: {\n                    let recordName = \"UNKNOWN\";\n                    for (const name in Helper.GDI.RecordType) {\n                        const recordTypes: any = Helper.GDI.RecordType;\n                        if (recordTypes[name] === type) {\n                            recordName = name;\n                            break;\n                        }\n                    }\n                    Helper.log(\"[EMF] \" + recordName + \" record (0x\" + type.toString(16) + \") at offset 0x\"\n                        + curpos.toString(16) + \" with \" + size + \" bytes\");\n                    break;\n                }\n            }\n\n            curpos += size;\n        }\n\n        if (!all) {\n            throw new EMFJSError(\"Could not read all records\");\n        }\n    }\n\n    public play(gdi: GDIContext): void {\n        const len = this._records.length;\n        for (let i = 0; i < len; i++) {\n            this._records[i](gdi);\n        }\n    }\n}\n","/*\n\nThe MIT License (MIT)\n\nCopyright (c) 2016 Tom Zoehner\nCopyright (c) 2018 Thomas Bluemel\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n*/\n\nimport { SVG } from \"../util\";\nimport { SVGPathBuilder } from \"../util/SVG\";\nimport { EMFJSError, Helper } from \"./Helper\";\nimport { Obj, PointL, PointS, RectL } from \"./Primitives\";\nimport { CreateSimpleRegion, Region } from \"./Region\";\nimport { Brush, ColorRef, Font, Pen } from \"./Style\";\n\ninterface ISelectedStyle {\n    brush?: Brush;\n    pen?: Pen;\n    font?: Font;\n    region?: Region;\n    path?: Path;\n\n    [key: string]: Obj | undefined;\n}\n\nclass Path extends Obj {\n    public svgPath: SVGPathBuilder;\n\n    constructor(svgPath: SVGPathBuilder, copy?: Path) {\n        super(\"path\");\n        if (svgPath != null) {\n            this.svgPath = svgPath;\n        } else {\n            this.svgPath = copy.svgPath;\n        }\n    }\n\n    public clone(): Path {\n        return new Path(null, this);\n    }\n\n    public toString(): string {\n        return \"{[path]}\";\n    }\n}\n\nfunction createStockObjects(): { [key: string]: Obj } {\n    // Create global stock objects\n    const createSolidBrush = (r: number, g: number, b: number) => {\n        return new Brush(null, {\n            style: Helper.GDI.BrushStyle.BS_SOLID,\n            color: new ColorRef(null, r, g, b),\n        });\n    };\n    const createSolidPen = (r: number, g: number, b: number) => {\n        return new Pen(null, Helper.GDI.PenStyle.PS_SOLID, 1, new ColorRef(null, r, g, b), null);\n    };\n    const stockObjs: { [key: string]: Obj } = {\n        WHITE_BRUSH: createSolidBrush(255, 255, 255),\n        LTGRAY_BRUSH: createSolidBrush(212, 208, 200),\n        GRAY_BRUSH: createSolidBrush(128, 128, 128),\n        DKGRAY_BRUSH: createSolidBrush(64, 64, 64),\n        BLACK_BRUSH: createSolidBrush(0, 0, 0),\n        NULL_BRUSH: new Brush(null, {\n            style: Helper.GDI.BrushStyle.BS_NULL,\n        }),\n        WHITE_PEN: createSolidPen(255, 255, 255),\n        BLACK_PEN: createSolidPen(0, 0, 0),\n        NULL_PEN: new Pen(null, Helper.GDI.PenStyle.PS_NULL, 0, null, null),\n        OEM_FIXED_FONT: null, // TODO\n        ANSI_FIXED_FONT: null, // TODO\n        ANSI_VAR_FONT: null, // TODO\n        SYSTEM_FONT: null, // TODO\n        DEVICE_DEFAULT_FONT: null, // TODO\n        DEFAULT_PALETTE: null, // TODO\n        SYSTEM_FIXED_FONT: null, // TODO\n        DEFAULT_GUI_FONT: null, // TODO\n    };\n\n    const objs: { [key: string]: Obj } = {};\n    for (const t in stockObjs) {\n        const stockObjects: { [key: string]: number } = Helper.GDI.StockObject as { [key: string]: number };\n        const idx = stockObjects[t] - 0x80000000;\n        objs[idx.toString()] = stockObjs[t];\n    }\n    return objs;\n}\n\nconst _StockObjects = createStockObjects();\n\nclass GDIContextState {\n    public _svggroup: SVGElement;\n    public _svgclipChanged: boolean;\n    public _svgtextbkfilter: SVGFilterElement;\n    public mapmode: number;\n    public stretchmode: number;\n    public textalign: number;\n    public bkmode: number;\n    public textcolor: ColorRef;\n    public bkcolor: ColorRef;\n    public polyfillmode: number;\n    public miterlimit: number;\n    public wx: number;\n    public wy: number;\n    public ww: number;\n    public wh: number;\n    public vx: number;\n    public vy: number;\n    public vw: number;\n    public vh: number;\n    public x: number;\n    public y: number;\n    public nextbrx: number;\n    public nextbry: number;\n    public brx: number;\n    public bry: number;\n    public clip: Region;\n    public ownclip: boolean;\n    public selected: ISelectedStyle;\n\n    constructor(copy: GDIContextState, defObjects?: ISelectedStyle) {\n        if (copy != null) {\n            this._svggroup = copy._svggroup;\n            this._svgclipChanged = copy._svgclipChanged;\n            this._svgtextbkfilter = copy._svgtextbkfilter;\n            this.mapmode = copy.mapmode;\n            this.stretchmode = copy.stretchmode;\n            this.textalign = copy.textalign;\n            this.bkmode = copy.bkmode;\n            this.textcolor = copy.textcolor.clone();\n            this.bkcolor = copy.bkcolor.clone();\n            this.polyfillmode = copy.polyfillmode;\n            this.miterlimit = copy.miterlimit;\n            this.wx = copy.wx;\n            this.wy = copy.wy;\n            this.ww = copy.ww;\n            this.wh = copy.wh;\n            this.vx = copy.vx;\n            this.vy = copy.vy;\n            this.vw = copy.vw;\n            this.vh = copy.vh;\n            this.x = copy.x;\n            this.y = copy.y;\n            this.nextbrx = copy.nextbrx;\n            this.nextbry = copy.nextbry;\n            this.brx = copy.brx;\n            this.bry = copy.bry;\n\n            this.clip = copy.clip;\n            this.ownclip = false;\n\n            this.selected = {};\n            for (const type in copy.selected) {\n                this.selected[type] = copy.selected[type];\n            }\n        } else {\n            this._svggroup = null;\n            this._svgclipChanged = false;\n            this._svgtextbkfilter = null;\n            this.mapmode = Helper.GDI.MapMode.MM_ANISOTROPIC;\n            this.stretchmode = Helper.GDI.StretchMode.COLORONCOLOR;\n            this.textalign = 0; // TA_LEFT | TA_TOP | TA_NOUPDATECP\n            this.bkmode = Helper.GDI.MixMode.OPAQUE;\n            this.textcolor = new ColorRef(null, 0, 0, 0);\n            this.bkcolor = new ColorRef(null, 255, 255, 255);\n            this.polyfillmode = Helper.GDI.PolygonFillMode.ALTERNATE;\n            this.miterlimit = 10;\n            this.wx = 0;\n            this.wy = 0;\n            this.ww = 0;\n            this.wh = 0;\n            this.vx = 0;\n            this.vy = 0;\n            this.vw = 0;\n            this.vh = 0;\n            this.x = 0;\n            this.y = 0;\n            this.nextbrx = 0;\n            this.nextbry = 0;\n            this.brx = 0;\n            this.bry = 0;\n\n            this.clip = null;\n            this.ownclip = false;\n\n            this.selected = {};\n            for (const type in defObjects) {\n                const defObj = defObjects[type];\n                this.selected[type] = defObj != null ? defObj.clone() : null;\n            }\n        }\n    }\n}\n\nexport class GDIContext {\n    private _svg: SVG;\n    private _svgdefs: SVGDefsElement;\n    private _svgPatterns: { [key: string]: Brush };\n    private _svgClipPaths: { [key: string]: Region };\n    private _svgPath: SVGPathBuilder;\n    private defObjects: ISelectedStyle;\n    private state: GDIContextState;\n    private statestack: GDIContextState[];\n    private objects: { [key: string]: Obj };\n\n    constructor(svg: SVG) {\n        this._svg = svg;\n        this._svgdefs = null;\n        this._svgPatterns = {};\n        this._svgClipPaths = {};\n        this._svgPath = null;\n\n        this.defObjects = {\n            brush: new Brush(null, {\n                style: Helper.GDI.BrushStyle.BS_SOLID,\n                color: new ColorRef(null, 0, 0, 0),\n            }),\n            pen: new Pen(null, Helper.GDI.PenStyle.PS_SOLID, 1, new ColorRef(null, 0, 0, 0), null),\n            font: new Font(null, null),\n            palette: null,\n            region: null,\n        };\n\n        this.state = new GDIContextState(null, this.defObjects);\n        this.statestack = [this.state];\n        this.objects = {};\n    }\n\n    public setMapMode(mode: number): void {\n        Helper.log(\"[gdi] setMapMode: mode=\" + mode);\n        this.state.mapmode = mode;\n        this.state._svggroup = null;\n    }\n\n    public setWindowOrgEx(x: number, y: number): void {\n        Helper.log(\"[gdi] setWindowOrgEx: x=\" + x + \" y=\" + y);\n        this.state.wx = x;\n        this.state.wy = y;\n        this.state._svggroup = null;\n    }\n\n    public setWindowExtEx(x: number, y: number): void {\n        Helper.log(\"[gdi] setWindowExtEx: x=\" + x + \" y=\" + y);\n        this.state.ww = x;\n        this.state.wh = y;\n        this.state._svggroup = null;\n    }\n\n    public setViewportOrgEx(x: number, y: number): void {\n        Helper.log(\"[gdi] setViewportOrgEx: x=\" + x + \" y=\" + y);\n        this.state.vx = x;\n        this.state.vy = y;\n        this.state._svggroup = null;\n    }\n\n    public setViewportExtEx(x: number, y: number): void {\n        Helper.log(\"[gdi] setViewportExtEx: x=\" + x + \" y=\" + y);\n        this.state.vw = x;\n        this.state.vh = y;\n        this.state._svggroup = null;\n    }\n\n    public setBrushOrgEx(origin: PointL): void {\n        Helper.log(\"[gdi] setBrushOrgEx: x=\" + origin.x + \" y=\" + origin.y);\n        this.state.nextbrx = origin.x;\n        this.state.nextbry = origin.y;\n    }\n\n    public saveDC(): void {\n        Helper.log(\"[gdi] saveDC\");\n        const prevstate = this.state;\n        this.state = new GDIContextState(this.state);\n        this.statestack.push(prevstate);\n        this.state._svggroup = null;\n    }\n\n    public restoreDC(saved: number): void {\n        Helper.log(\"[gdi] restoreDC: saved=\" + saved);\n        if (this.statestack.length > 1) {\n            if (saved === -1) {\n                this.state = this.statestack.pop();\n            } else if (saved < -1) {\n                throw new EMFJSError(\"restoreDC: relative restore not implemented\");\n            } else if (saved > 1) {\n                throw new EMFJSError(\"restoreDC: absolute restore not implemented\");\n            }\n        } else {\n            throw new EMFJSError(\"No saved contexts\");\n        }\n\n        this.state._svggroup = null;\n    }\n\n    public setStretchBltMode(stretchMode: number): void {\n        Helper.log(\"[gdi] setStretchBltMode: stretchMode=\" + stretchMode);\n    }\n\n    public rectangle(rect: RectL, rw: number, rh: number): void {\n        Helper.log(\"[gdi] rectangle: rect=\" + rect.toString() + \" with pen \" + this.state.selected.pen.toString()\n            + \" and brush \" + this.state.selected.brush.toString());\n        const bottom = this._todevY(rect.bottom);\n        const right = this._todevX(rect.right);\n        const top = this._todevY(rect.top);\n        const left = this._todevX(rect.left);\n        rw = this._todevH(rw);\n        rh = this._todevH(rh);\n        Helper.log(\"[gdi] rectangle: TRANSLATED: bottom=\" + bottom + \" right=\" + right + \" top=\" + top\n            + \" left=\" + left + \" rh=\" + rh + \" rw=\" + rw);\n        this._pushGroup();\n\n        const opts = this._applyOpts(null, true, true, false);\n        this._svg.rect(this.state._svggroup, left, top, right - left, bottom - top, rw / 2, rh / 2, opts);\n    }\n\n    public lineTo(x: number, y: number): void {\n        Helper.log(\"[gdi] lineTo: x=\" + x + \" y=\" + y + \" with pen \" + this.state.selected.pen.toString());\n        const toX = this._todevX(x);\n        const toY = this._todevY(y);\n        const fromX = this._todevX(this.state.x);\n        const fromY = this._todevY(this.state.y);\n\n        // Update position\n        this.state.x = x;\n        this.state.y = y;\n\n        Helper.log(\"[gdi] lineTo: TRANSLATED: toX=\" + toX + \" toY=\" + toY + \" fromX=\" + fromX + \" fromY=\" + fromY);\n        this._pushGroup();\n\n        const opts = this._applyOpts(null, true, false, false);\n        this._svg.line(this.state._svggroup, fromX, fromY, toX, toY, opts);\n    }\n\n    public moveToEx(x: number, y: number): void {\n        Helper.log(\"[gdi] moveToEx: x=\" + x + \" y=\" + y);\n        this.state.x = x;\n        this.state.y = y;\n        if (this._svgPath != null) {\n            this._svgPath.move(this.state.x, this.state.y);\n            Helper.log(\"[gdi] new path: \" + this._svgPath.path());\n        }\n    }\n\n    public polygon(points: PointS[] | PointL[], bounds: RectL, first: boolean): void {\n        Helper.log(\"[gdi] polygon: points=\" + points + \" with pen \" + this.state.selected.pen.toString()\n            + \" and brush \" + this.state.selected.brush.toString());\n        const pts = [];\n        for (let i = 0; i < points.length; i++) {\n            const point = points[i];\n            pts.push([this._todevX(point.x), this._todevY(point.y)]);\n        }\n        if (first) {\n            this._pushGroup();\n        }\n        const opts = {\n            \"fill-rule\": this.state.polyfillmode === Helper.GDI.PolygonFillMode.ALTERNATE ? \"evenodd\" : \"nonzero\",\n        };\n        this._applyOpts(opts, true, true, false);\n        this._svg.polygon(this.state._svggroup, pts, opts);\n    }\n\n    public polyPolygon(polygons: PointS[][] | PointL[][], bounds: RectL): void {\n        Helper.log(\"[gdi] polyPolygon: polygons.length=\" + polygons.length\n            + \" with pen \" + this.state.selected.pen.toString() + \" and brush \" + this.state.selected.brush.toString());\n\n        const cnt = polygons.length;\n        for (let i = 0; i < cnt; i++) {\n            this.polygon(polygons[i], bounds, i === 0);\n        }\n    }\n\n    public polyline(isLineTo: boolean, points: PointS[], bounds: RectL): void {\n        Helper.log(\"[gdi] polyline: isLineTo=\" + isLineTo.toString() + \", points=\" + points\n            + \", bounds=\" + bounds.toString() + \" with pen \" + this.state.selected.pen.toString());\n        const pts: number[][] = [];\n        for (let i = 0; i < points.length; i++) {\n            const point = points[i];\n            pts.push([this._todevX(point.x), this._todevY(point.y)]);\n        }\n\n        if (this._svgPath != null) {\n            if (!isLineTo || pts.length === 0) {\n                this._svgPath.move(this._todevX(this.state.x), this._todevY(this.state.y));\n            } else {\n                const firstPts = pts[0];\n                this._svgPath.move(firstPts[0], firstPts[1]);\n            }\n            this._svgPath.line(pts);\n            Helper.log(\"[gdi] new path: \" + this._svgPath.path());\n        } else {\n            this._pushGroup();\n            const opts = this._applyOpts(null, true, false, false);\n            if (isLineTo && points.length > 0) {\n                const firstPt = points[0];\n                if (firstPt.x !== this.state.x || firstPt.y !== this.state.y) {\n                    pts.unshift([this._todevX(this.state.x), this._todevY(this.state.y)]);\n                }\n            }\n            this._svg.polyline(this.state._svggroup, pts, opts);\n        }\n\n        if (points.length > 0) {\n            const lastPt = points[points.length - 1];\n            this.state.x = lastPt.x;\n            this.state.y = lastPt.y;\n        }\n    }\n\n    public polybezier(isPolyBezierTo: boolean, points: PointS[], bounds: RectL): void {\n        Helper.log(\"[gdi] polybezier: isPolyBezierTo=\" + isPolyBezierTo.toString() + \", points=\" + points\n            + \", bounds=\" + bounds.toString() + \" with pen \" + this.state.selected.pen.toString());\n        const pts = [];\n        for (let i = 0; i < points.length; i++) {\n            const point = points[i];\n            pts.push({x: this._todevX(point.x), y: this._todevY(point.y)});\n        }\n\n        if (this._svgPath != null) {\n            if (isPolyBezierTo && pts.length > 0) {\n                const firstPts = pts[0];\n                this._svgPath.move(firstPts.x, firstPts.y);\n            } else {\n                this._svgPath.move(this._todevX(this.state.x), this._todevY(this.state.y));\n            }\n\n            if (pts.length < (isPolyBezierTo ? 3 : 4)) {\n                throw new EMFJSError(\"Not enough points to draw bezier\");\n            }\n\n            for (let i = isPolyBezierTo ? 1 : 0; i + 3 <= pts.length; i += 3) {\n                const cp1 = pts[i];\n                const cp2 = pts[i + 1];\n                const ep = pts[i + 2];\n                this._svgPath.curveC(cp1.x, cp1.y, cp2.x, cp2.y, ep.x, ep.y);\n            }\n\n            Helper.log(\"[gdi] new path: \" + this._svgPath.path());\n        } else {\n            throw new EMFJSError(\"polybezier not implemented (not a path)\");\n        }\n\n        if (points.length > 0) {\n            const lastPt = points[points.length - 1];\n            this.state.x = lastPt.x;\n            this.state.y = lastPt.y;\n        }\n    }\n\n    public selectClipPath(rgnMode: number): void {\n        Helper.log(\"[gdi] selectClipPath: rgnMode=0x\" + rgnMode.toString(16));\n    }\n\n    public selectClipRgn(rgnMode: number, region: Region): void {\n        Helper.log(\"[gdi] selectClipRgn: rgnMode=0x\" + rgnMode.toString(16));\n        if (rgnMode === Helper.GDI.RegionMode.RGN_COPY) {\n            this.state.selected.region = region;\n            this.state.clip = null;\n            this.state.ownclip = false;\n        } else {\n            if (region == null) {\n                throw new EMFJSError(\"No clip region to select\");\n            }\n\n            throw new EMFJSError(\"Not implemented: rgnMode=0x\" + rgnMode.toString(16));\n        }\n        this.state._svgclipChanged = true;\n    }\n\n    public offsetClipRgn(offset: PointL): void {\n        Helper.log(\"[gdi] offsetClipRgn: offset=\" + offset.toString());\n        this._getClipRgn().offset(offset.x, offset.y);\n    }\n\n    public setTextAlign(textAlignmentMode: number): void {\n        Helper.log(\"[gdi] setTextAlign: textAlignmentMode=0x\" + textAlignmentMode.toString(16));\n        this.state.textalign = textAlignmentMode;\n    }\n\n    public setMiterLimit(miterLimit: number): void {\n        Helper.log(\"[gdi] setMiterLimit: miterLimit=\" + miterLimit);\n        this.state.miterlimit = miterLimit;\n    }\n\n    public setBkMode(bkMode: number): void {\n        Helper.log(\"[gdi] setBkMode: bkMode=0x\" + bkMode.toString(16));\n        this.state.bkmode = bkMode;\n    }\n\n    public setBkColor(bkColor: ColorRef): void {\n        Helper.log(\"[gdi] setBkColor: bkColor=\" + bkColor.toString());\n        this.state.bkcolor = bkColor;\n        this.state._svgtextbkfilter = null;\n    }\n\n    public setPolyFillMode(polyFillMode: number): void {\n        Helper.log(\"[gdi] setPolyFillMode: polyFillMode=\" + polyFillMode);\n        this.state.polyfillmode = polyFillMode;\n    }\n\n    public createBrush(index: number, brush: Brush): void {\n        const idx = this._storeObject(brush, index);\n        Helper.log(\"[gdi] createBrush: brush=\" + brush.toString() + \" with handle \" + idx);\n    }\n\n    public createPen(index: number, pen: Pen): void {\n        const idx = this._storeObject(pen, index);\n        Helper.log(\"[gdi] createPen: pen=\" + pen.toString() + \" width handle \" + idx);\n    }\n\n    public createPenEx(index: number, pen: Pen): void {\n        const idx = this._storeObject(pen, index);\n        Helper.log(\"[gdi] createPenEx: pen=\" + pen.toString() + \" width handle \" + idx);\n    }\n\n    public selectObject(objIdx: number, checkType: string): void {\n        const obj = this._getObject(objIdx);\n        if (obj != null && (checkType == null || obj.type === checkType)) {\n            this._selectObject(obj);\n            Helper.log(\"[gdi] selectObject: objIdx=\" + objIdx\n                + (obj ? \" selected \" + obj.type + \": \" + obj.toString() : \"[invalid index]\"));\n        } else {\n            Helper.log(\"[gdi] selectObject: objIdx=\" + objIdx\n                + (obj ? \" invalid object type: \" + obj.type : \"[invalid index]\"));\n        }\n    }\n\n    public abortPath(): void {\n        Helper.log(\"[gdi] abortPath\");\n        if (this._svgPath != null) {\n            this._svgPath = null;\n        }\n    }\n\n    public beginPath(): void {\n        Helper.log(\"[gdi] beginPath\");\n\n        if (this._svgPath != null) {\n            this._svgPath = null;\n        }\n\n        this._svgPath = this._svg.createPath();\n    }\n\n    public closeFigure(): void {\n        Helper.log(\"[gdi] closeFigure\");\n        if (this._svgPath == null) {\n            throw new EMFJSError(\"No path bracket: cannot close figure\");\n        }\n\n        this._svgPath.close();\n    }\n\n    public fillPath(bounds: RectL): void {\n        Helper.log(\"[gdi] fillPath\");\n        if (this.state.selected.path == null) {\n            throw new EMFJSError(\"No path selected\");\n        }\n\n        const selPath = this.state.selected.path;\n        const opts = this._applyOpts(null, true, true, false);\n        this._svg.path(this.state._svggroup, selPath.svgPath, opts);\n\n        this._pushGroup();\n        this.state.selected.path = null;\n    }\n\n    public strokePath(bounds: RectL): void {\n        Helper.log(\"[gdi] strokePath\");\n        if (this.state.selected.path == null) {\n            throw new EMFJSError(\"No path selected\");\n        }\n\n        const selPath = this.state.selected.path;\n        const opts = this._applyOpts({fill: \"none\"}, true, false, false);\n        this._svg.path(this.state._svggroup, selPath.svgPath, opts);\n\n        this._pushGroup();\n        this.state.selected.path = null;\n    }\n\n    public endPath(): void {\n        Helper.log(\"[gdi] endPath\");\n        if (this._svgPath == null) {\n            throw new EMFJSError(\"No path bracket: cannot end path\");\n        }\n\n        this._pushGroup();\n        this._selectObject(new Path(this._svgPath));\n        this._svgPath = null;\n    }\n\n    public deleteObject(objIdx: number): void {\n        const ret = this._deleteObject(objIdx);\n        Helper.log(\"[gdi] deleteObject: objIdx=\" + objIdx + (ret ? \" deleted object\" : \"[invalid index]\"));\n    }\n\n    private _pushGroup(): void {\n        if (this.state._svggroup == null || this.state._svgclipChanged) {\n            this.state._svgclipChanged = false;\n            this.state._svgtextbkfilter = null;\n\n            const settings: any = {\n                viewBox: [this.state.vx, this.state.vy, this.state.vw, this.state.vh].join(\" \"),\n                preserveAspectRatio: \"none\",\n            };\n            if (this.state.clip != null) {\n                Helper.log(\"[gdi] new svg x=\" + this.state.vx + \" y=\" + this.state.vy + \" width=\" + this.state.vw\n                    + \" height=\" + this.state.vh + \" with clipping\");\n                settings[\"clip-path\"] = \"url(#\" + this._getSvgClipPathForRegion(this.state.clip) + \")\";\n            } else {\n                Helper.log(\"[gdi] new svg x=\" + this.state.vx + \" y=\" + this.state.vy + \" width=\" + this.state.vw\n                    + \" height=\" + this.state.vh + \" without clipping\");\n            }\n            this.state._svggroup = this._svg.svg(this.state._svggroup,\n                this.state.vx, this.state.vy, this.state.vw, this.state.vh, settings);\n        }\n    }\n\n    private _getStockObject(idx: number) {\n        if (idx >= 0x80000000 && idx <= 0x80000011) {\n            return _StockObjects[(idx - 0x80000000).toString()];\n        } else if (idx === Helper.GDI.StockObject.DC_BRUSH) {\n            return this.state.selected.brush;\n        } else if (idx === Helper.GDI.StockObject.DC_PEN) {\n            return this.state.selected.pen;\n        }\n        return null;\n    }\n\n    private _storeObject(obj: Obj, idx: number) {\n        if (!idx) {\n            idx = 0;\n            while (this.objects[idx.toString()] != null && idx <= 65535) {\n                idx++;\n            }\n            if (idx > 65535) {\n                Helper.log(\"[gdi] Too many objects!\");\n                return -1;\n            }\n        }\n\n        this.objects[idx.toString()] = obj;\n        return idx;\n    }\n\n    private _getObject(objIdx: number) {\n        let obj = this.objects[objIdx.toString()];\n        if (obj == null) {\n            obj = this._getStockObject(objIdx);\n            if (obj == null) {\n                Helper.log(\"[gdi] No object with handle \" + objIdx);\n            }\n        }\n        return obj;\n    }\n\n    private _getSvgDef() {\n        if (this._svgdefs == null) {\n            this._svgdefs = this._svg.defs();\n        }\n        return this._svgdefs;\n    }\n\n    private _getSvgClipPathForRegion(region: Region) {\n        for (const existingId in this._svgClipPaths) {\n            const rgn = this._svgClipPaths[existingId];\n            if (rgn === region) {\n                return existingId;\n            }\n        }\n\n        const id = Helper._makeUniqueId(\"c\");\n        const sclip = this._svg.clipPath(this._getSvgDef(), id, \"userSpaceOnUse\");\n        switch (region.complexity) {\n            case 1:\n                this._svg.rect(sclip,\n                    this._todevX(region.bounds.left),\n                    this._todevY(region.bounds.top),\n                    this._todevW(region.bounds.right - region.bounds.left),\n                    this._todevH(region.bounds.bottom - region.bounds.top),\n                    {\"fill\": \"black\", \"stroke-width\": 0});\n                break;\n            case 2:\n                for (let i = 0; i < region.scans.length; i++) {\n                    const scan = region.scans[i];\n                    for (let j = 0; j < scan.scanlines.length; j++) {\n                        const scanline = scan.scanlines[j];\n                        this._svg.rect(sclip, this._todevX(scanline.left), this._todevY(scan.top),\n                            this._todevW(scanline.right - scanline.left), this._todevH(scan.bottom - scan.top),\n                            {\"fill\": \"black\", \"stroke-width\": 0});\n                    }\n                }\n                break;\n        }\n        this._svgClipPaths[id] = region;\n        return id;\n    }\n\n    private _getSvgPatternForBrush(brush: Brush) {\n        for (const existingId in this._svgPatterns) {\n            const pat = this._svgPatterns[existingId];\n            if (pat === brush) {\n                return existingId;\n            }\n        }\n\n        let width;\n        let height;\n        let img;\n        switch (brush.style) {\n            case Helper.GDI.BrushStyle.BS_PATTERN:\n                width = brush.pattern.getWidth();\n                height = brush.pattern.getHeight();\n                break;\n            case Helper.GDI.BrushStyle.BS_DIBPATTERNPT:\n                width = brush.dibpatternpt.getWidth();\n                height = brush.dibpatternpt.getHeight();\n                img = brush.dibpatternpt.base64ref();\n                break;\n            default:\n                throw new EMFJSError(\"Invalid brush style\");\n        }\n\n        const id = Helper._makeUniqueId(\"p\");\n        const spat = this._svg.pattern(this._getSvgDef(), id, this.state.brx, this.state.bry, width, height,\n            {patternUnits: \"userSpaceOnUse\"});\n        this._svg.image(spat, 0, 0, width, height, img);\n        this._svgPatterns[id] = brush;\n        return id;\n    }\n\n    private _selectObject(obj: Obj) {\n        this.state.selected[obj.type] = obj;\n        switch (obj.type) {\n            case \"region\":\n                this.state._svgclipChanged = true;\n                break;\n            case \"brush\":\n                this.state.brx = this.state.nextbrx;\n                this.state.bry = this.state.nextbry;\n                break;\n        }\n    }\n\n    private _deleteObject(objIdx: number) {\n        const obj = this.objects[objIdx.toString()];\n        if (obj != null) {\n            for (let i = 0; i < this.statestack.length; i++) {\n                const state = this.statestack[i];\n                if (state.selected[obj.type] === obj) {\n                    state.selected[obj.type] = this.defObjects[obj.type].clone();\n                }\n            }\n            delete this.objects[objIdx.toString()];\n            return true;\n        }\n\n        Helper.log(\"[gdi] Cannot delete object with invalid handle \" + objIdx);\n        return false;\n    }\n\n    private _getClipRgn() {\n        if (this.state.clip != null) {\n            if (!this.state.ownclip) {\n                this.state.clip = this.state.clip.clone();\n            }\n        } else {\n            if (this.state.selected.region != null) {\n                this.state.clip = this.state.selected.region.clone();\n            } else {\n                this.state.clip = CreateSimpleRegion(this.state.wx, this.state.wy, this.state.wx + this.state.ww,\n                    this.state.wy + this.state.wh);\n            }\n        }\n        this.state.ownclip = true;\n        return this.state.clip;\n    }\n\n    private _todevX(val: number) {\n        // http://wvware.sourceforge.net/caolan/mapmode.html\n        // logical -> device\n        return Math.floor((val - this.state.wx) * (this.state.vw / this.state.ww)) + this.state.vx;\n    }\n\n    private _todevY(val: number) {\n        // http://wvware.sourceforge.net/caolan/mapmode.html\n        // logical -> device\n        return Math.floor((val - this.state.wy) * (this.state.vh / this.state.wh)) + this.state.vy;\n    }\n\n    private _todevW(val: number) {\n        // http://wvware.sourceforge.net/caolan/mapmode.html\n        // logical -> device\n        return Math.floor(val * (this.state.vw / this.state.ww)) + this.state.vx;\n    }\n\n    private _todevH(val: number) {\n        // http://wvware.sourceforge.net/caolan/mapmode.html\n        // logical -> device\n        return Math.floor(val * (this.state.vh / this.state.wh)) + this.state.vy;\n    }\n\n    private _tologicalX(val: number) {\n        // http://wvware.sourceforge.net/caolan/mapmode.html\n        // logical -> device\n        return Math.floor((val - this.state.vx) / (this.state.vw / this.state.ww)) + this.state.wx;\n    }\n\n    private _tologicalY(val: number) {\n        // http://wvware.sourceforge.net/caolan/mapmode.html\n        // logical -> device\n        return Math.floor((val - this.state.vy) / (this.state.vh / this.state.wh)) + this.state.wy;\n    }\n\n    private _tologicalW(val: number) {\n        // http://wvware.sourceforge.net/caolan/mapmode.html\n        // logical -> device\n        return Math.floor(val / (this.state.vw / this.state.ww)) + this.state.wx;\n    }\n\n    private _tologicalH(val: number) {\n        // http://wvware.sourceforge.net/caolan/mapmode.html\n        // logical -> device\n        return Math.floor(val / (this.state.vh / this.state.wh)) + this.state.wy;\n    }\n\n    private _applyOpts(opts: any, usePen: boolean, useBrush: boolean, useFont: boolean) {\n        if (opts == null) {\n            opts = {};\n        }\n        if (usePen) {\n            const pen = this.state.selected.pen;\n            if (pen.style !== Helper.GDI.PenStyle.PS_NULL) {\n                opts.stroke = \"#\" + pen.color.toHex(); // TODO: pen style\n                opts[\"stroke-width\"] = pen.width;\n\n                opts[\"stroke-miterlimit\"] = this.state.miterlimit;\n\n                opts[\"stroke-linecap\"] = \"round\";\n                const dotWidth = 1;\n\n                opts[\"stroke-linejoin\"] = \"round\";\n\n                const dashWidth = opts[\"stroke-width\"] * 4;\n                const dotSpacing = opts[\"stroke-width\"] * 2;\n                switch (pen.style) {\n                    case Helper.GDI.PenStyle.PS_DASH:\n                        opts[\"stroke-dasharray\"] = [dashWidth, dotSpacing].toString();\n                        break;\n                    case Helper.GDI.PenStyle.PS_DOT:\n                        opts[\"stroke-dasharray\"] = [dotWidth, dotSpacing].toString();\n                        break;\n                    case Helper.GDI.PenStyle.PS_DASHDOT:\n                        opts[\"stroke-dasharray\"] = [dashWidth, dotSpacing, dotWidth, dotSpacing].toString();\n                        break;\n                    case Helper.GDI.PenStyle.PS_DASHDOTDOT:\n                        opts[\"stroke-dasharray\"] =\n                            [dashWidth, dotSpacing, dotWidth, dotSpacing, dotWidth, dotSpacing].toString();\n                        break;\n                }\n            }\n        }\n        if (useBrush) {\n            const brush = this.state.selected.brush;\n            switch (brush.style) {\n                case Helper.GDI.BrushStyle.BS_SOLID:\n                    opts.fill = \"#\" + brush.color.toHex();\n                    break;\n                case Helper.GDI.BrushStyle.BS_PATTERN:\n                case Helper.GDI.BrushStyle.BS_DIBPATTERNPT:\n                    opts.fill = \"url(#\" + this._getSvgPatternForBrush(brush) + \")\";\n                    break;\n                case Helper.GDI.BrushStyle.BS_NULL:\n                    opts.fill = \"none\";\n                    break;\n                default:\n                    Helper.log(\"[gdi] unsupported brush style: \" + brush.style);\n                    opts.fill = \"none\";\n                    break;\n            }\n        }\n        if (useFont) {\n            const font = this.state.selected.font;\n            opts[\"font-family\"] = font.facename;\n            opts[\"font-size\"] = Math.abs(font.height);\n            opts.fill = \"#\" + this.state.textcolor.toHex();\n        }\n        return opts;\n    }\n}\n","/*\n\nThe MIT License (MIT)\n\nCopyright (c) 2016 Tom Zoehner\nCopyright (c) 2018 Thomas Bluemel\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n*/\n\nimport { SVG } from \"../util\";\nimport { Blob } from \"./Blob\";\nimport { EMFRecords } from \"./EMFRecords\";\nimport { GDIContext } from \"./GDIContext\";\nimport { EMFJSError, Helper } from \"./Helper\";\n\nexport interface IRendererSettings {\n    width: string;\n    height: string;\n    wExt: number;\n    hExt: number;\n    xExt: number;\n    yExt: number;\n    mapMode: number;\n}\n\nexport class Renderer {\n    private _img: EMF;\n\n    constructor(blob: ArrayBuffer) {\n        this.parse(blob);\n        Helper.log(\"EMFJS.Renderer instantiated\");\n    }\n\n    public render(info: IRendererSettings): SVGElement {\n        const svgElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n\n        this._render(\n            new SVG(svgElement),\n            info.mapMode,\n            info.wExt,\n            info.hExt,\n            info.xExt,\n            info.yExt);\n        svgElement.setAttribute(\"viewBox\", [0, 0, info.xExt, info.yExt].join(\" \"));\n        svgElement.setAttribute(\"preserveAspectRatio\", \"none\"); // TODO: MM_ISOTROPIC vs MM_ANISOTROPIC\n        svgElement.setAttribute(\"width\", info.width);\n        svgElement.setAttribute(\"height\", info.height);\n        return svgElement;\n    }\n\n    private parse(blob: ArrayBuffer) {\n        this._img = null;\n\n        const reader = new Blob(blob);\n\n        const type = reader.readUint32();\n        if (type !== 0x00000001) {\n            throw new EMFJSError(\"Not an EMF file\");\n        }\n        const size = reader.readUint32();\n        if (size % 4 !== 0) {\n            throw new EMFJSError(\"Not an EMF file\");\n        }\n\n        this._img = new EMF(reader, size);\n\n        if (this._img == null) {\n            throw new EMFJSError(\"Format not recognized\");\n        }\n    }\n\n    private _render(svg: SVG, mapMode: number, w: number, h: number, xExt: number, yExt: number) {\n        const gdi = new GDIContext(svg);\n        gdi.setWindowExtEx(w, h);\n        gdi.setViewportExtEx(xExt, yExt);\n        gdi.setMapMode(mapMode);\n        Helper.log(\"[EMF] BEGIN RENDERING --->\");\n        this._img.render(gdi);\n        Helper.log(\"[EMF] <--- DONE RENDERING\");\n    }\n}\n\nclass EMF {\n    private _hdrsize: number;\n    private _records: EMFRecords;\n\n    constructor(reader: Blob, hdrsize: number) {\n        this._hdrsize = hdrsize;\n        this._records = new EMFRecords(reader, this._hdrsize);\n    }\n\n    public render(gdi: GDIContext): void {\n        this._records.play(gdi);\n    }\n}\n"],"names":["root","factory","exports","module","define","amd","this","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flood","filter","resultId","color","opacity","_settings","floodElement","document","createElementNS","setAttribute","toString","appendChild","composite","in1","in2","k1","k2","k3","k4","compositeElement","_path","move","x","y","path","substr","line","pts","forEach","point","curveC","x1","y1","x2","y2","close","svg","filters","SVGFilters","_defs","undefined","_svg","parent","width","height","settings","svgElement","_appendSettings","image","url","imageElement","setAttributeNS","rect","rx","ry","rectElement","Number","lineElement","polygon","points","polygonElement","map","join","polyline","polylineElement","ellipse","cx","cy","ellipseElement","builder","pathElement","text","textElement","textNode","createTextNode","id","filterElement","pattern","patternElement","defs","defsElement","clipPath","units","clipElement","createPath","SVGPathBuilder","element","keys","message","setPrototypeOf","Error","isLoggingEnabled","loggingEnabled","enabled","log","console","_makeUniqueId","prefix","_uniqueId","_writeUint32Val","uint8arr","pos","val","_blobToBinary","blob","ret","len","length","i","String","fromCharCode","GDI","FormatSignature","ENHMETA_SIGNATURE","EPS_SIGNATURE","BITMAPINFOHEADER_SIZE","BITMAPCOREHEADER_SIZE","RecordType","EMR_POLYBEZIER","EMR_POLYGON","EMR_POLYLINE","EMR_POLYBEZIERTO","EMR_POLYLINETO","EMR_POLYPOLYLINE","EMR_POLYPOLYGON","EMR_SETWINDOWEXTEX","EMR_SETWINDOWORGEX","EMR_SETVIEWPORTEXTEX","EMR_SETVIEWPORTORGEX","EMR_SETBRUSHORGEX","EMR_EOF","EMR_SETPIXELV","EMR_SETMAPPERFLAGS","EMR_SETMAPMODE","EMR_SETBKMODE","EMR_SETPOLYFILLMODE","EMR_SETROP2","EMR_SETSTRETCHBLTMODE","EMR_SETTEXTALIGN","EMR_SETCOLORADJUSTMENT","EMR_SETTEXTCOLOR","EMR_SETBKCOLOR","EMR_OFFSETCLIPRGN","EMR_MOVETOEX","EMR_SETMETARGN","EMR_EXCLUDECLIPRECT","EMR_INTERSECTCLIPRECT","EMR_SCALEVIEWPORTEXTEX","EMR_SCALEWINDOWEXTEX","EMR_SAVEDC","EMR_RESTOREDC","EMR_SETWORLDTRANSFORM","EMR_MODIFYWORLDTRANSFORM","EMR_SELECTOBJECT","EMR_CREATEPEN","EMR_CREATEBRUSHINDIRECT","EMR_DELETEOBJECT","EMR_ANGLEARC","EMR_ELLIPSE","EMR_RECTANGLE","EMR_ROUNDRECT","EMR_ARC","EMR_CHORD","EMR_PIE","EMR_SELECTPALETTE","EMR_CREATEPALETTE","EMR_SETPALETTEENTRIES","EMR_RESIZEPALETTE","EMR_REALIZEPALETTE","EMR_EXTFLOODFILL","EMR_LINETO","EMR_ARCTO","EMR_POLYDRAW","EMR_SETARCDIRECTION","EMR_SETMITERLIMIT","EMR_BEGINPATH","EMR_ENDPATH","EMR_CLOSEFIGURE","EMR_FILLPATH","EMR_STROKEANDFILLPATH","EMR_STROKEPATH","EMR_FLATTENPATH","EMR_WIDENPATH","EMR_SELECTCLIPPATH","EMR_ABORTPATH","EMR_COMMENT","EMR_FILLRGN","EMR_FRAMERGN","EMR_INVERTRGN","EMR_PAINTRGN","EMR_EXTSELECTCLIPRGN","EMR_BITBLT","EMR_STRETCHBLT","EMR_MASKBLT","EMR_PLGBLT","EMR_SETDIBITSTODEVICE","EMR_STRETCHDIBITS","EMR_EXTCREATEFONTINDIRECTW","EMR_EXTTEXTOUTA","EMR_EXTTEXTOUTW","EMR_POLYBEZIER16","EMR_POLYGON16","EMR_POLYLINE16","EMR_POLYBEZIERTO16","EMR_POLYLINETO16","EMR_POLYPOLYLINE16","EMR_POLYPOLYGON16","EMR_POLYDRAW16","EMR_CREATEMONOBRUSH","EMR_CREATEDIBPATTERNBRUSHPT","EMR_EXTCREATEPEN","EMR_POLYTEXTOUTA","EMR_POLYTEXTOUTW","EMR_SETICMMODE","EMR_CREATECOLORSPACE","EMR_SETCOLORSPACE","EMR_DELETECOLORSPACE","EMR_GLSRECORD","EMR_GLSBOUNDEDRECORD","EMR_PIXELFORMAT","EMR_DRAWESCAPE","EMR_EXTESCAPE","EMR_SMALLTEXTOUT","EMR_FORCEUFIMAPPING","EMR_NAMEDESCAPE","EMR_COLORCORRECTPALETTE","EMR_SETICMPROFILEA","EMR_SETICMPROFILEW","EMR_ALPHABLEND","EMR_SETLAYOUT","EMR_TRANSPARENTBLT","EMR_GRADIENTFILL","EMR_SETLINKEDUFIS","EMR_SETTEXTJUSTIFICATION","EMR_COLORMATCHTOTARGETW","EMR_CREATECOLORSPACEW","MetafileEscapes","NEWFRAME","ABORTDOC","NEXTBAND","SETCOLORTABLE","GETCOLORTABLE","FLUSHOUT","DRAFTMODE","QUERYESCSUPPORT","SETABORTPROC","STARTDOC","ENDDOC","GETPHYSPAGESIZE","GETPRINTINGOFFSET","GETSCALINGFACTOR","META_ESCAPE_ENHANCED_METAFILE","SETPENWIDTH","SETCOPYCOUNT","SETPAPERSOURCE","PASSTHROUGH","GETTECHNOLOGY","SETLINECAP","SETLINEJOIN","SETMITERLIMIT","BANDINFO","DRAWPATTERNRECT","GETVECTORPENSIZE","GETVECTORBRUSHSIZE","ENABLEDUPLEX","GETSETPAPERBINS","GETSETPRINTORIENT","ENUMPAPERBINS","SETDIBSCALING","EPSPRINTING","ENUMPAPERMETRICS","GETSETPAPERMETRICS","POSTSCRIPT_DATA","POSTSCRIPT_IGNORE","GETDEVICEUNITS","GETEXTENDEDTEXTMETRICS","GETPAIRKERNTABLE","EXTTEXTOUT","GETFACENAME","DOWNLOADFACE","METAFILE_DRIVER","QUERYDIBSUPPORT","BEGIN_PATH","CLIP_TO_PATH","END_PATH","OPEN_CHANNEL","DOWNLOADHEADER","CLOSE_CHANNEL","POSTSCRIPT_PASSTHROUGH","ENCAPSULATED_POSTSCRIPT","POSTSCRIPT_IDENTIFY","POSTSCRIPT_INJECTION","CHECKJPEGFORMAT","CHECKPNGFORMAT","GET_PS_FEATURESETTING","MXDC_ESCAPE","SPCLPASSTHROUGH2","MapMode","MM_TEXT","MM_LOMETRIC","MM_HIMETRIC","MM_LOENGLISH","MM_HIENGLISH","MM_TWIPS","MM_ISOTROPIC","MM_ANISOTROPIC","StretchMode","BLACKONWHITE","WHITEONBLACK","COLORONCOLOR","HALFTONE","MixMode","TRANSPARENT","OPAQUE","BrushStyle","BS_SOLID","BS_NULL","BS_HATCHED","BS_PATTERN","BS_INDEXED","BS_DIBPATTERN","BS_DIBPATTERNPT","BS_PATTERN8X8","BS_DIBPATTERN8X8","BS_MONOPATTERN","PenStyle","PS_COSMETIC","PS_ENDCAP_ROUND","PS_JOIN_ROUND","PS_SOLID","PS_DASH","PS_DOT","PS_DASHDOT","PS_DASHDOTDOT","PS_NULL","PS_INSIDEFRAME","PS_USERSTYLE","PS_ALTERNATE","PS_ENDCAP_SQUARE","PS_ENDCAP_FLAT","PS_JOIN_BEVEL","PS_JOIN_MITER","PS_GEOMETRIC","PolygonFillMode","ALTERNATE","WINDING","BitmapCompression","BI_RGB","BI_RLE8","BI_RLE4","BI_BITFIELDS","BI_JPEG","BI_PNG","RegionMode","RGN_AND","RGN_OR","RGN_XOR","RGN_DIFF","RGN_COPY","StockObject","WHITE_BRUSH","LTGRAY_BRUSH","GRAY_BRUSH","DKGRAY_BRUSH","BLACK_BRUSH","NULL_BRUSH","WHITE_PEN","BLACK_PEN","NULL_PEN","OEM_FIXED_FONT","ANSI_FIXED_FONT","ANSI_VAR_FONT","SYSTEM_FONT","DEVICE_DEFAULT_FONT","DEFAULT_PALETTE","SYSTEM_FIXED_FONT","DEFAULT_GUI_FONT","DC_BRUSH","DC_PEN","offset","Blob","data","Uint8Array","eof","seek","newpos","EMFJSError","skip","cnt","newPos","readBinary","readInt8","readUint8","readInt32","readUint32","readUint16","readInt16","readString","readNullTermString","maxSize","byte","readFixedSizeUnicodeString","fixedSizeChars","charCode","reader","clone","PointS","PointL","left","top","right","bottom","RectL","empty","intersect","rectL","Math","max","min","SizeL","type","copy","rectCnt","bounds","scans","scanLine","r","Scan","push","append","_updateComplexity","complexity","Region","scan","scanlines","scanline","subtract","Helper","si","cloned","splice","first","last","slen","offX","offY","Obj","skipsize","planes","bitcount","colors","compression","sizeimage","xpelspermeter","ypelspermeter","clrused","clrimportant","usergb","_usergb","hdrsize","_infosize","_header","BitmapCoreHeader","BitmapInfoHeader","masks","getWidth","getHeight","abs","infosize","header","bitmapInfo","_reader","_offset","_location","_info","BitmapInfo","totalSize","size","makeBitmapFileHeader","buf","ArrayBuffer","view","base64ref","prevpos","mime","ref","btoa","g","b","ColorRef","toHex","slice","escapement","orientation","weight","italic","underline","strikeout","charset","outprecision","clipprecision","quality","pitchAndFamily","pitch","family","dataLength","start","facename","Font","JSON","stringify","style","DIBitmap","dibpatternpt","hatchstyle","Brush","brush","Pen","headerSize","recordStart","frame","descriptionLen","descriptionOff","nPalEntries","refDevCx","refDevCy","refDevCxMm","refDevCyMm","hdrSize","prevPos","description","pixelFormatSize","pixelFormatOff","displayDevCxUm","displayDevCyUm","_records","EmfHeader","all","curpos","gdi","setMapMode","setWindowOrgEx","setWindowExtEx","setViewportOrgEx","setViewportExtEx","saveDC","restoreDC","setBkMode","setBkColor","createBrush","createPen","offBmi","cbBmi","offBits","cbBits","off","selectObject","deleteObject","rectangle","lineTo","moveToEx","isSmall","polyCnt","polygonsPtCnts","ptCnt","p","ip","polyPolygon","setPolyFillMode","polybezier","setTextAlign","setStretchBltMode","setBrushOrgEx","beginPath","endPath","abortPath","closeFigure","fillPath","strokePath","selectClipPath","selectClipRgn","offsetClipRgn","setMiterLimit","recordName","main_loop","play","svgPath","Path","_StockObjects","createSolidBrush","createSolidPen","stockObjs","objs","t","createStockObjects","defObjects","_svggroup","_svgclipChanged","_svgtextbkfilter","mapmode","stretchmode","textalign","bkmode","textcolor","bkcolor","polyfillmode","miterlimit","wx","wy","ww","wh","vx","vy","vw","vh","nextbrx","nextbry","brx","bry","clip","ownclip","selected","defObj","_svgdefs","_svgPatterns","_svgClipPaths","_svgPath","pen","font","palette","region","state","GDIContextState","statestack","objects","mode","origin","prevstate","saved","pop","stretchMode","rw","rh","_todevY","_todevX","_todevH","_pushGroup","opts","_applyOpts","toX","toY","fromX","fromY","polygons","isLineTo","firstPts","firstPt","unshift","lastPt","isPolyBezierTo","cp1","cp2","ep","rgnMode","_getClipRgn","textAlignmentMode","miterLimit","bkMode","bkColor","polyFillMode","index","idx","_storeObject","createPenEx","objIdx","checkType","_getObject","_selectObject","selPath","fill","_deleteObject","viewBox","preserveAspectRatio","_getSvgClipPathForRegion","_getStockObject","_getSvgDef","existingId","sclip","_todevW","j","_getSvgPatternForBrush","img","spat","patternUnits","rgn","floor","_tologicalX","_tologicalY","_tologicalW","_tologicalH","usePen","useBrush","useFont","stroke","dotWidth","dashWidth","dotSpacing","parse","render","info","_render","SVG","mapMode","wExt","hExt","xExt","yExt","_img","EMF","w","h","GDIContext","_hdrsize","EMFRecords"],"sourceRoot":""}